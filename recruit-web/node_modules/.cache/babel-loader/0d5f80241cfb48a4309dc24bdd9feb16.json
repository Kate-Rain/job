{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\lin\\plugin\\axios.js","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\lin\\plugin\\axios.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// ajax 封装插件, 使用 axios\nimport Vue from 'vue';\nimport axios from 'axios';\nimport Config from '@/config';\nimport ErrorCode from '@/config/error-code';\nimport store from '@/store';\nimport { getToken, saveAccessToken } from '@/lin/util/token';\nvar config = {\n  baseURL: Config.baseURL || process.env.apiUrl || '',\n  timeout: 10 * 1000,\n  // 请求超时时间设置\n  crossDomain: true,\n  // withCredentials: true, // Check cross-site Access-Control\n  // 定义可获得的http响应状态码\n  // return true、设置为null或者undefined，promise将resolved,否则将rejected\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 510;\n  }\n};\n/**\n * 错误码是否是refresh相关\n * @param {number} code 错误码\n */\n\nfunction refreshTokenException(code) {\n  var flag = false;\n  var codes = [10000, 10042, 10050, 10052];\n\n  if (codes.includes(code)) {\n    flag = true;\n  }\n\n  return flag;\n} // const retryTime = 2 // 请求失败重试次数\n// const retryDelay = 1500 // 请求失败重试间隔\n// 创建请求实例\n\n\nvar _axios = axios.create(config);\n\n_axios.interceptors.request.use(function (originConfig) {\n  // 有 API 请求重新计时\n  Vue.prototype.$_lin_jump();\n\n  var reqConfig = _objectSpread({}, originConfig); // step1: 容错处理\n\n\n  if (!reqConfig.url) {\n    /* eslint-disable-next-line */\n    console.error('request need url');\n    throw new Error({\n      source: 'axiosInterceptors',\n      message: 'request need url'\n    });\n  }\n\n  if (!reqConfig.method) {\n    // 默认使用 get 请求\n    reqConfig.method = 'get';\n  } // 大小写容错\n\n\n  reqConfig.method = reqConfig.method.toLowerCase(); // 参数容错\n\n  if (reqConfig.method === 'get') {\n    if (!reqConfig.params) {\n      // 防止字段用错\n      reqConfig.params = reqConfig.data || {};\n    }\n  } else if (reqConfig.method === 'post') {\n    if (!reqConfig.data) {\n      // 防止字段用错\n      reqConfig.data = reqConfig.params || {};\n    } // 检测是否包含文件类型, 若包含则进行 formData 封装\n\n\n    var hasFile = false;\n    Object.keys(reqConfig.data).forEach(function (key) {\n      if (_typeof(reqConfig.data[key]) === 'object') {\n        var item = reqConfig.data[key];\n\n        if (item instanceof FileList || item instanceof File || item instanceof Blob) {\n          hasFile = true;\n        }\n      }\n    }); // 检测到存在文件使用 FormData 提交数据\n\n    if (hasFile) {\n      var formData = new FormData();\n      Object.keys(reqConfig.data).forEach(function (key) {\n        formData.append(key, reqConfig.data[key]);\n      });\n      reqConfig.data = formData;\n    }\n  } else {\n    // TODO: 其他类型请求数据格式处理\n\n    /* eslint-disable-next-line */\n    console.warn(\"\\u5176\\u4ED6\\u8BF7\\u6C42\\u7C7B\\u578B: \".concat(reqConfig.method, \", \\u6682\\u65E0\\u81EA\\u52A8\\u5904\\u7406\"));\n  } // step2: permission 处理\n\n\n  if (reqConfig.url === 'recruit/user/refresh') {\n    var refreshToken = getToken('refresh_token');\n\n    if (refreshToken) {\n      // eslint-disable-next-line no-param-reassign\n      reqConfig.headers.Authorization = refreshToken;\n    }\n  } else {\n    // 有access_token\n    var accessToken = getToken('access_token');\n\n    if (accessToken) {\n      // eslint-disable-next-line no-param-reassign\n      reqConfig.headers.Authorization = accessToken;\n    }\n  }\n\n  return reqConfig;\n}, function (error) {\n  Promise.reject(error);\n}); // Add a response interceptor\n\n\n_axios.interceptors.response.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(res) {\n    var _res$data, code, message;\n\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _res$data = res.data, code = _res$data.code, message = _res$data.message; // eslint-disable-line\n\n            if (!(res.status.toString().charAt(0) === '2')) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.data);\n\n          case 3:\n            return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve, reject) {\n                var url, cache, refreshResult, result, errorArr;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        url = res.config.url; // refreshToken相关，直接登出\n\n                        if (!refreshTokenException(code)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        setTimeout(function () {\n                          store.dispatch('loginOut');\n                          var origin = window.location.origin;\n                          window.location.href = origin;\n                        }, 1500);\n                        return _context.abrupt(\"return\", resolve(null));\n\n                      case 4:\n                        if (!(code === 10041 || code === 10051)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        cache = {};\n\n                        if (!(cache.url !== url)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        cache.url = url;\n                        _context.next = 10;\n                        return _axios('recruit/user/refresh');\n\n                      case 10:\n                        refreshResult = _context.sent;\n                        saveAccessToken(refreshResult.access_token); // 将上次失败请求重发\n\n                        _context.next = 14;\n                        return _axios(res.config);\n\n                      case 14:\n                        result = _context.sent;\n                        return _context.abrupt(\"return\", resolve(result));\n\n                      case 16:\n                        if (!res.config.handleError) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", reject(res));\n\n                      case 18:\n                        // 第二种情况：采用前端自己的一套异常提示信息；特殊情况：如果本次请求添加了 showBackend: true, 弹出后端返回错误信息。\n                        if (Config.useFrontEndErrorMsg && !res.config.showBackend) {\n                          // 弹出前端自定义错误信息\n                          errorArr = Object.entries(ErrorCode).filter(function (v) {\n                            return v[0] === code.toString();\n                          }); // 匹配到前端自定义的错误码\n\n                          if (errorArr.length > 0 && errorArr[0][1] !== '') {\n                            message = errorArr[0][1]; // eslint-disable-line\n                          } else {\n                            message = ErrorCode['777'];\n                          }\n                        }\n\n                        Vue.prototype.$message({\n                          message: message,\n                          type: 'error'\n                        });\n                        reject();\n\n                      case 21:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  if (!error.response) {\n    Vue.prototype.$notify({\n      title: 'Network Error',\n      dangerouslyUseHTMLString: true,\n      message: '<strong class=\"my-notify\">请求错误,服务器无响应.</strong>'\n    });\n    console.log('error', error);\n  } // 判断请求超时\n\n\n  if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n    Vue.prototype.$message({\n      type: 'warning',\n      message: '请求超时'\n    });\n  }\n\n  return Promise.reject(error);\n}); // eslint-disable-next-line\n\n\nPlugin.install = function (Vue, options) {\n  // eslint-disable-next-line\n  Vue.axios = _axios;\n  window.axios = _axios;\n  Object.defineProperties(Vue.prototype, {\n    axios: {\n      get: function get() {\n        return _axios;\n      }\n    },\n    $axios: {\n      get: function get() {\n        return _axios;\n      }\n    }\n  });\n};\n\nif (!Vue.axios) {\n  Vue.use(Plugin);\n} // 导出常用函数\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'post',\n    url: url,\n    data: data,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'get',\n    url: url,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'put',\n    url: url,\n    params: params,\n    data: data\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function _delete(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'delete',\n    url: url,\n    params: params\n  });\n}\nexport default _axios;",null]}