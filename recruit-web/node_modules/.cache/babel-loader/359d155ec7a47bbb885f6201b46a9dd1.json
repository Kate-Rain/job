{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\recruit\\recruit-system\\recruit-web\\src\\lin\\model\\log.js","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\lin\\model\\log.js","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable class-methods-use-this */\nimport _axios, { get } from '@/lin/plugin/axios';\n\nvar Log = /*#__PURE__*/function () {\n  function Log(_ref) {\n    var _ref$uPage = _ref.uPage,\n        uPage = _ref$uPage === void 0 ? 0 : _ref$uPage,\n        _ref$uCount = _ref.uCount,\n        uCount = _ref$uCount === void 0 ? 5 : _ref$uCount,\n        _ref$lPage = _ref.lPage,\n        lPage = _ref$lPage === void 0 ? 0 : _ref$lPage,\n        _ref$lCount = _ref.lCount,\n        lCount = _ref$lCount === void 0 ? 15 : _ref$lCount,\n        _ref$sPage = _ref.sPage,\n        sPage = _ref$sPage === void 0 ? 0 : _ref$sPage,\n        _ref$sCount = _ref.sCount,\n        sCount = _ref$sCount === void 0 ? 15 : _ref$sCount;\n\n    _classCallCheck(this, Log);\n\n    _defineProperty(this, \"name\", null);\n\n    _defineProperty(this, \"start\", null);\n\n    _defineProperty(this, \"end\", null);\n\n    _defineProperty(this, \"keyword\", null);\n\n    if (uPage === 0) {\n      this.uPage = uPage;\n    }\n\n    if (uCount) {\n      this.uCount = uCount;\n    }\n\n    if (lPage === 0) {\n      this.lPage = lPage;\n    }\n\n    if (lCount) {\n      this.lCount = lCount;\n    }\n\n    if (sPage === 0) {\n      this.sPage = sPage;\n    }\n\n    if (sCount) {\n      this.sCount = sCount;\n    } // lCount && this.lCount = lCount\n\n  }\n\n  _createClass(Log, [{\n    key: \"increaseUpage\",\n    value: function () {\n      var _increaseUpage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.uPage += 1;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function increaseUpage() {\n        return _increaseUpage.apply(this, arguments);\n      }\n\n      return increaseUpage;\n    }()\n  }, {\n    key: \"increaseLpage\",\n    value: function () {\n      var _increaseLpage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.lPage += 1;\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function increaseLpage() {\n        return _increaseLpage.apply(this, arguments);\n      }\n\n      return increaseLpage;\n    }()\n  }, {\n    key: \"increaseSpage\",\n    value: function increaseSpage() {\n      this.sPage += 1;\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.lPage = 0;\n      this.uPage = 0;\n      this.sPage = 0;\n    }\n  }, {\n    key: \"setBaseInfo\",\n    value: function setBaseInfo(name, start, end) {\n      this.name = name;\n      this.start = start;\n      this.end = end;\n    }\n  }, {\n    key: \"setKeyword\",\n    value: function setKeyword(keyword) {\n      this.keyword = keyword;\n    }\n  }, {\n    key: \"addTestLog\",\n    value: function () {\n      var _addTestLog = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var log;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get('recruit/test/info');\n\n              case 2:\n                log = _context3.sent;\n                return _context3.abrupt(\"return\", log);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function addTestLog() {\n        return _addTestLog.apply(this, arguments);\n      }\n\n      return addTestLog;\n    }()\n    /**\n     * 查询已经被记录过日志的用户（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     */\n\n  }, {\n    key: \"getLoggedUsers\",\n    value: function () {\n      var _getLoggedUsers = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref2) {\n        var count, page, users;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                count = _ref2.count, page = _ref2.page;\n                _context4.next = 3;\n                return get('recruit/log/users', {\n                  count: count || this.uCount,\n                  page: page || this.uPage\n                });\n\n              case 3:\n                users = _context4.sent;\n                return _context4.abrupt(\"return\", users);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getLoggedUsers(_x) {\n        return _getLoggedUsers.apply(this, arguments);\n      }\n\n      return getLoggedUsers;\n    }()\n    /**\n     * 查询日志信息（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     * @param {number} name 用户昵称\n     * @param {number} start 起始时间 # 2018-11-01 09:39:35\n     * @param {number} end 结束时间\n     */\n\n  }, {\n    key: \"getLogs\",\n    value: function () {\n      var _getLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(_ref3) {\n        var count, page, name, start, end, _ref3$next, next, res;\n\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                count = _ref3.count, page = _ref3.page, name = _ref3.name, start = _ref3.start, end = _ref3.end, _ref3$next = _ref3.next, next = _ref3$next === void 0 ? false : _ref3$next;\n\n                if (!next) {\n                  this.setBaseInfo(name, start, end);\n                }\n\n                if (page === 0) {\n                  this.lPage = 0;\n                }\n\n                _context5.next = 5;\n                return _axios({\n                  url: 'recruit/log',\n                  params: {\n                    count: count || this.lCount,\n                    page: page || this.lPage,\n                    name: name || this.name,\n                    start: start || this.start,\n                    end: end || this.end\n                  },\n                  handleError: true\n                });\n\n              case 5:\n                res = _context5.sent;\n                return _context5.abrupt(\"return\", res);\n\n              case 7:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getLogs(_x2) {\n        return _getLogs.apply(this, arguments);\n      }\n\n      return getLogs;\n    }()\n    /**\n     * 所搜日志信息（分页）\n     * @param {number} count 每页个数\n     * @param {number} page 第几页\n     * @param {number} keyword 搜索关键词\n     * @param {number} name 用户昵称\n     * @param {number} start 起始时间 # 2018-11-01 09:39:35\n     * @param {number} end 结束时间\n     */\n\n  }, {\n    key: \"searchLogs\",\n    value: function () {\n      var _searchLogs = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref4) {\n        var count, page, keyword, name, start, end, _ref4$next, next, res;\n\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                count = _ref4.count, page = _ref4.page, keyword = _ref4.keyword, name = _ref4.name, start = _ref4.start, end = _ref4.end, _ref4$next = _ref4.next, next = _ref4$next === void 0 ? false : _ref4$next;\n\n                if (!next) {\n                  this.setBaseInfo(name, start, end);\n                  this.setKeyword(keyword);\n                }\n\n                if (page === 0) {\n                  this.sPage = 0;\n                }\n\n                _context6.prev = 3;\n                _context6.next = 6;\n                return get('recruit/log/search', {\n                  count: count || this.sCount,\n                  page: page || this.sPage,\n                  keyword: keyword || this.keyword,\n                  name: name || this.name,\n                  start: start || this.start,\n                  end: end || this.end\n                });\n\n              case 6:\n                res = _context6.sent;\n                return _context6.abrupt(\"return\", res);\n\n              case 10:\n                _context6.prev = 10;\n                _context6.t0 = _context6[\"catch\"](3);\n                console.log(_context6.t0);\n\n              case 13:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[3, 10]]);\n      }));\n\n      function searchLogs(_x3) {\n        return _searchLogs.apply(this, arguments);\n      }\n\n      return searchLogs;\n    }()\n  }, {\n    key: \"moreUserPage\",\n    value: function () {\n      var _moreUserPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.increaseUpage();\n\n              case 2:\n                return _context7.abrupt(\"return\", this.getLoggedUsers({}));\n\n              case 3:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function moreUserPage() {\n        return _moreUserPage.apply(this, arguments);\n      }\n\n      return moreUserPage;\n    }()\n  }, {\n    key: \"moreLogPage\",\n    value: function () {\n      var _moreLogPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.next = 2;\n                return this.increaseLpage();\n\n              case 2:\n                return _context8.abrupt(\"return\", this.getLogs({\n                  next: true\n                }));\n\n              case 3:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function moreLogPage() {\n        return _moreLogPage.apply(this, arguments);\n      }\n\n      return moreLogPage;\n    }()\n  }, {\n    key: \"moreSearchPage\",\n    value: function () {\n      var _moreSearchPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.increaseSpage();\n                return _context9.abrupt(\"return\", this.searchLogs({\n                  next: true\n                }));\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function moreSearchPage() {\n        return _moreSearchPage.apply(this, arguments);\n      }\n\n      return moreSearchPage;\n    }()\n  }]);\n\n  return Log;\n}();\n\nexport default new Log({});",{"version":3,"names":["_axios","get","Log","uPage","uCount","lPage","lCount","sPage","sCount","name","start","end","keyword","log","count","page","users","next","setBaseInfo","url","params","handleError","res","setKeyword","console","increaseUpage","getLoggedUsers","increaseLpage","getLogs","increaseSpage","searchLogs"],"sources":["D:/recruit/recruit-system/recruit-web/src/lin/model/log.js"],"sourcesContent":["/* eslint-disable class-methods-use-this */\nimport _axios, {\n  get\n} from '@/lin/plugin/axios'\n\nclass Log {\n  name = null\n\n  start = null\n\n  end = null\n\n  keyword = null\n\n  constructor({\n    uPage = 0,\n    uCount = 5,\n\n    lPage = 0,\n    lCount = 15,\n\n    sPage = 0,\n    sCount = 15,\n  }) {\n    if (uPage === 0) {\n      this.uPage = uPage\n    }\n    if (uCount) {\n      this.uCount = uCount\n    }\n    if (lPage === 0) {\n      this.lPage = lPage\n    }\n    if (lCount) {\n      this.lCount = lCount\n    }\n    if (sPage === 0) {\n      this.sPage = sPage\n    }\n    if (sCount) {\n      this.sCount = sCount\n    }\n    // lCount && this.lCount = lCount\n  }\n\n  async increaseUpage() {\n    this.uPage += 1\n  }\n\n  async increaseLpage() {\n    this.lPage += 1\n  }\n\n  increaseSpage() {\n    this.sPage += 1\n  }\n\n  init() {\n    this.lPage = 0\n    this.uPage = 0\n    this.sPage = 0\n  }\n\n  setBaseInfo(name, start, end) {\n    this.name = name\n    this.start = start\n    this.end = end\n  }\n\n  setKeyword(keyword) {\n    this.keyword = keyword\n  }\n\n  async addTestLog() {\n    const log = await get('recruit/test/info')\n    return log\n  }\n\n  /**\n   * 查询已经被记录过日志的用户（分页）\n   * @param {number} count 每页个数\n   * @param {number} page 第几页\n   */\n  async getLoggedUsers({\n    count,\n    page\n  }) {\n    const users = await get('recruit/log/users', {\n      count: count || this.uCount,\n      page: page || this.uPage,\n    })\n    return users\n  }\n\n  /**\n   * 查询日志信息（分页）\n   * @param {number} count 每页个数\n   * @param {number} page 第几页\n   * @param {number} name 用户昵称\n   * @param {number} start 起始时间 # 2018-11-01 09:39:35\n   * @param {number} end 结束时间\n   */\n  async getLogs({\n    count,\n    page,\n    name,\n    start,\n    end,\n    next = false\n  }) {\n    if (!next) {\n      this.setBaseInfo(name, start, end)\n    }\n    if (page === 0) {\n      this.lPage = 0\n    }\n    const res = await _axios({\n      url: 'recruit/log',\n      params: {\n        count: count || this.lCount,\n        page: page || this.lPage,\n        name: name || this.name,\n        start: start || this.start,\n        end: end || this.end,\n      },\n      handleError: true,\n    })\n    return res\n  }\n\n  /**\n   * 所搜日志信息（分页）\n   * @param {number} count 每页个数\n   * @param {number} page 第几页\n   * @param {number} keyword 搜索关键词\n   * @param {number} name 用户昵称\n   * @param {number} start 起始时间 # 2018-11-01 09:39:35\n   * @param {number} end 结束时间\n   */\n  async searchLogs({\n    count,\n    page,\n    keyword,\n    name,\n    start,\n    end,\n    next = false\n  }) {\n    if (!next) {\n      this.setBaseInfo(name, start, end)\n      this.setKeyword(keyword)\n    }\n    if (page === 0) {\n      this.sPage = 0\n    }\n    try {\n      const res = await get('recruit/log/search', {\n        count: count || this.sCount,\n        page: page || this.sPage,\n        keyword: keyword || this.keyword,\n        name: name || this.name,\n        start: start || this.start,\n        end: end || this.end,\n      })\n      return res\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  async moreUserPage() {\n    await this.increaseUpage()\n    return this.getLoggedUsers({})\n  }\n\n  async moreLogPage() {\n    await this.increaseLpage()\n    return this.getLogs({\n      next: true\n    })\n  }\n\n  async moreSearchPage() {\n    this.increaseSpage()\n    return this.searchLogs({\n      next: true\n    })\n  }\n}\n\nexport default new Log({})\n"],"mappings":"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"}]}