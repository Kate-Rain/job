{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\position\\position-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\position\\position-detail.vue","mtime":1745594678000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Position } from '@/model/position';\nimport { Application } from '@/model/application';\nimport { Resume } from '@/model/resume';\nimport { Favor } from '@/model/favor';\nimport Vue from 'vue';\nimport Utils from \"@/lin/util/util\";\nimport User from '@/lin/model/user';\nimport store from '@/store';\nimport router from '../../router';\nimport provinces from \"@/lin/util/provinces\";\nimport { VueJsonp } from 'vue-jsonp';\nVue.use(VueJsonp);\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    detailPositionID: {\n      type: Number\n    },\n    flag: {\n      type: Boolean,\n      default: true\n    },\n    temp: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      me: null,\n      hr: null,\n      city: null,\n      loading: false,\n      outMap: false,\n      form: {},\n      list: {\n        user_id: '',\n        position_id: '',\n        resume_id: '',\n        hr_id: '',\n        company_id: ''\n      },\n      collect: {},\n      mapData: {\n        point: \"\",\n        city: null,\n        district: null,\n        searchList: null,\n        address: null\n      },\n      deAvatar: require(\"@/assets/image/user/94bf413e-7176-4713-bc08-fbfa44ac0f11.png\")\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var _this = this;\n\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              _context.next = 3;\n              return Position.getById(this.detailPositionID);\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return Position.updateHits(this.detailPositionID);\n\n            case 6:\n              this.form = res;\n              this.loading = false;\n              _context.next = 10;\n              return User.getID_UserData(this.form.hr_id);\n\n            case 10:\n              this.hr = _context.sent;\n              this.hr.avatar = this.hr.avatar != null ? this.hr.avatar : this.deAvatar; // 获取当前工作地点处于的省份\n\n              provinces.forEach(function (item, index) {\n                item.city.forEach(function (itt, idx) {\n                  if (itt.name.indexOf(_this.form.city) != -1) {\n                    _this.city = item.name;\n                  } else {\n                    // 如果 当前公司地址属于附属城市,那么判定当前城市的所有附属城市中是否有当前城市开头的,以\"标识\n                    if (JSON.stringify(itt.districtAndCounty).indexOf('\"' + _this.form.city) != -1) {\n                      _this.city = item.name;\n                    }\n                  }\n                });\n              }); // console.log(\"读取到的权限\",store.getters.user);\n\n              if (!store.getters.user) {\n                _context.next = 18;\n                break;\n              }\n\n              // 未登录状态和hr不执行后续代码\n              this.me = store.getters.user;\n\n              if (!this.me) {\n                _context.next = 17;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 17:\n              this.getInfo();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    handlePass: function () {\n      var _handlePass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Position.updateState(this.detailPositionID, 1);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回查询所有未审核职位的页面\n\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handlePass(_x) {\n        return _handlePass.apply(this, arguments);\n      }\n\n      return handlePass;\n    }(),\n    handleFail: function () {\n      var _handleFail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Position.updateState(this.detailPositionID, 2);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回查询所有未审核职位的页面\n\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleFail(_x2) {\n        return _handleFail.apply(this, arguments);\n      }\n\n      return handleFail;\n    }(),\n    isDelive: function () {\n      var _isDelive = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(val) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (this.$store.getters.user) {\n                  _context4.next = 2;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\");\n\n              case 2:\n                _context4.next = 4;\n                return Application.getByPositionIdAndUserId(this.detailPositionID, this.$store.getters.user.id);\n\n              case 4:\n                result = _context4.sent;\n                return _context4.abrupt(\"return\", result);\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function isDelive(_x3) {\n        return _isDelive.apply(this, arguments);\n      }\n\n      return isDelive;\n    }(),\n    // 投递简历\n    handleDelivery: function () {\n      var _handleDelivery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(val) {\n        var flag, temp, result, res;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(this.$store.getters.user === null)) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                this.$message.error(\"请注册登录后投递简历\");\n                return _context5.abrupt(\"return\");\n\n              case 3:\n                _context5.next = 5;\n                return Application.getByPositionIdAndUserId(this.detailPositionID, this.$store.getters.user.id);\n\n              case 5:\n                flag = _context5.sent;\n\n                if (!(flag === false)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                // 不能重复投递\n                this.$message.error(\"你已投递过该职位，不可重复投递\");\n                _context5.next = 25;\n                break;\n\n              case 10:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前投递简历的职位id\n\n                this.list.position_id = this.detailPositionID; // 根据用户id查询绑定的简历id\n\n                _context5.next = 14;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 14:\n                temp = _context5.sent;\n                this.list.resume_id = temp.resume_id; // 根据职位id查询该职位所对应的hr_id\n\n                _context5.next = 18;\n                return Position.getById(this.detailPositionID);\n\n              case 18:\n                result = _context5.sent;\n                this.list.hr_id = result.hr_id;\n                this.list.company_id = result.company_id; // 调用创建申请的方法\n\n                _context5.next = 23;\n                return Application.create(this.list);\n\n              case 23:\n                res = _context5.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 25:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleDelivery(_x4) {\n        return _handleDelivery.apply(this, arguments);\n      }\n\n      return handleDelivery;\n    }(),\n    getInfo: function () {\n      var _getInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var temp, result;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前投递简历的职位id\n\n                this.list.position_id = this.detailPositionID; // 根据用户id查询绑定的简历id\n\n                _context6.next = 4;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 4:\n                temp = _context6.sent;\n                this.list.resume_id = temp.id; // 根据职位id查询该职位所对应的hr_id\n\n                _context6.next = 8;\n                return Position.getById(this.detailPositionID);\n\n              case 8:\n                result = _context6.sent;\n                this.list.hr_id = result.hr_id;\n                this.list.company_id = result.company_id;\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getInfo() {\n        return _getInfo.apply(this, arguments);\n      }\n\n      return getInfo;\n    }(),\n    // 收藏职位\n    handleCollect: function () {\n      var _handleCollect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(this.$store.getters.user === null)) {\n                  _context7.next = 3;\n                  break;\n                }\n\n                this.$message.error(\"请注册登录后收藏职位\");\n                return _context7.abrupt(\"return\");\n\n              case 3:\n                // 获取当前登录求职者的用户id\n                this.collect.user_id = this.$store.getters.user.id; // 获取当前收藏的职位id\n\n                this.collect.position_id = this.detailPositionID; // 调用添加收藏的方法\n\n                _context7.next = 7;\n                return Favor.create(this.collect);\n\n              case 7:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 9:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleCollect(_x5) {\n        return _handleCollect.apply(this, arguments);\n      }\n\n      return handleCollect;\n    }(),\n    back: function back() {\n      // this.$router.go(-1)\n      // 由于showEdit这个变量是在父组件定义的，因此不能在子组件改变该变量的值，可以使用事件传递的方式，当点击了返回按钮，触发的事件处理机制交给父组件去处理\n      this.$emit('detailClose');\n    },\n    // 查看地图\n    showMap: function showMap() {\n      // 显示地图组件,优先执行,保证地图组件能够正常创建\n      this.outMap = true;\n      this.searchMap();\n    },\n    searchMap: function searchMap() {\n      this.$message.success(\"正在获取地图数据\");\n      var url = \"https://apis.map.qq.com/ws/place/v1/suggestion\";\n\n      var __this = this;\n\n      this.$jsonp(url, {\n        key: Utils.getMapAPI(),\n        region: this.form.city,\n        keyword: this.form.company_name,\n        output: \"jsonp\"\n      }).then(function (res) {\n        res.data.forEach(function (item) {\n          item.value = item.title; //因为element的远程搜索只能识别value所以需要对返回的数据进行一下处理\n        }); // console.log(\"res.data\",res.data);\n\n        __this.mapData.searchList = res.data;\n\n        if (res.data[0]) {\n          __this.mapData.address = res.data[0].address;\n          __this.mapData.city = res.data[0].province;\n          __this.mapData.district = res.data[0].city + \"/\" + res.data[0].district;\n\n          __this.createMap(res.data[0].location.lat, res.data[0].location.lng);\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    // 生成地图数据\n    createMap: function createMap(w, h) {\n      //步骤：定义map变量 调用 qq.maps.Map() 构造函数   获取地图显示容器\n      var myLatlng = new qq.maps.LatLng(w, h);\n      this.mapData.point = w + \",\" + h; //定义工厂模式函数\n\n      var myOptions = {\n        zoom: 15,\n        //设置地图缩放级别\n        center: myLatlng,\n        //设置中心点样式\n        mapTypeId: qq.maps.MapTypeId.ROADMAP\n      }; //获取父元素\n\n      var content = document.getElementById(\"container\"); //循环删除子元素，一直删除第一个子元素直到没有子元素即为清空\n\n      while (content.hasChildNodes()) {\n        content.removeChild(content.firstChild);\n      } //获取dom元素添加地图信息\n\n\n      var map = new qq.maps.Map(document.getElementById(\"container\"), myOptions); //给定位的位置添加图片标注\n\n      var marker = new qq.maps.Marker({\n        position: myLatlng,\n        map: map\n      }); //给定位的位置添加文本标注\n\n      var marker1 = new qq.maps.Label({\n        position: myLatlng,\n        map: map,\n        content: this.form.company_name\n      });\n      this.$message.success(\"获取地图数据成功!\");\n    },\n    contactHR: function contactHR() {\n      var msg = {\n        recvId: this.form.hr_id,\n        self: {\n          name: this.me.nickname,\n          icon: this.me.avatar\n        },\n        target: {\n          name: this.hr.name,\n          icon: this.hr.avatar\n        },\n        time: new Date().toLocaleString()\n      };\n      var data = {\n        type: \"handToken\",\n        info: msg\n      };\n      this.$ws.ws.send(JSON.stringify(data));\n      this.$router.push(\"/ws-msg\");\n    }\n  }\n};",{"version":3,"mappings":"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","names":["Vue","props","detailPositionID","type","flag","default","temp","data","me","hr","city","loading","outMap","form","list","user_id","position_id","resume_id","hr_id","company_id","collect","mapData","point","district","searchList","address","deAvatar","mounted","Position","res","User","provinces","item","store","methods","handlePass","val","handleFail","isDelive","Application","result","handleDelivery","Resume","getInfo","handleCollect","Favor","back","showMap","searchMap","key","region","keyword","output","then","__this","catch","console","createMap","w","h","zoom","center","mapTypeId","content","position","map","contactHR","recvId","self","name","icon","target","time","info"],"sourceRoot":"src/view/position","sources":["position-detail.vue"],"sourcesContent":["<template>\n\t<div class=\"container\">\n\t\t<div class=\"title\">\n\t\t\t<span>职位详细信息</span>\n\t\t\t<span class=\"back\" @click=\"back\">\n\t\t\t<i class=\"iconfont icon-fanhui\"></i> 返回\n\t\t\t</span>\n\t\t</div>\n\t\t<el-divider></el-divider>\n\t\t<div class=\"wrap\">\n\t\t\t<el-row>\n\t\t\t\t<el-col :xs=\"24\">\n\t\t\t\t\t<el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n\t\t\t\t\t\t<el-form-item label=\"职位名称\" prop=\"title\">\n\t\t\t\t\t\t\t<span>{{ form.title }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位发布者\" prop=\"title\" v-if=\"hr\">\n\t\t\t\t\t\t\t<span class=\"hr-name\">{{ hr.name }}</span>\n\t\t\t\t\t\t\t<img :src=\"hr.avatar\" alt=\"\" class=\"hr-img\">\n\t\t\t\t\t\t\t<span v-if=\"me\">\n\t\t\t\t\t\t\t\t<el-button type=\"success\" plain icon=\"el-icon-chat-line-round\" class=\"mini\" @click=\"contactHR\" v-if=\"!me.hr\">联系ta</el-button>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span v-else class=\"login-msg\">\n\t\t\t\t\t\t\t\t<el-alert title=\"登录后可与hr留言沟通噢\" type=\"success\"> </el-alert>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<!-- <el-form-item label=\"所属分类\" prop=\"category_name\">\n\t\t\t\t\t\t<span>{{ form.category_name }}</span>\n\t\t\t\t\t\t</el-form-item> -->\n\t\t\t\t\t\t<el-form-item label=\"职位浏览量\" prop=\"hits\">\n\t\t\t\t\t\t\t<span>{{ form.hits }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"招聘人数\" prop=\"quantity\">\n\t\t\t\t\t\t\t<span>{{ form.quantity }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"薪资\" prop=\"salary_up\">\n\t\t\t\t\t\t\t<span>￥{{ form.salary_down }}~￥{{ form.salary_up }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"工作地点\" prop=\"city\" v-if=\"me && !me.hr\">\n\t\t\t\t\t\t\t<span>{{ form.city }}->({{city}})</span>&nbsp;\n\t\t\t\t\t\t\t<el-button type=\"success\" plain icon=\"el-icon-map-location\" class=\"mini\" @click=\"showMap\" >查看地图</el-button>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"学历要求\" prop=\"edu_back\" v-if=\"me && !me.hr\">\n\t\t\t\t\t\t\t<span>{{ form.edu_back }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位要求\" prop=\"requirement\">\n\t\t\t\t\t\t\t<span>{{ form.requirement }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"公司名称\" prop=\"company_name\" v-if=\"me && !me.hr\">\n\t\t\t\t\t\t\t<span>{{ form.company_name }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"公司简介\" prop=\"company_desc\">\n\t\t\t\t\t\t\t<span>{{ form.company_desc }}</span>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item class=\"submit\" v-if=\"me && !me.hr\">\n\t\t\t\t\t\t\t<!--通过职位的状态属性state来控制通过按钮和不通过按钮是否显示-->\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"handlePass('form')\" v-if=\"form.state == 0 && flag\">通 过</el-button>\n\t\t\t\t\t\t\t<el-button @click=\"handleFail('form')\" v-if=\"form.state == 0 && flag\">不通过</el-button>\n\t\t\t\t\t\t\t<span  v-if=\"temp == 1\">\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"handleDelivery('form')\" v-if=\"isDelive('form')\">投递简历</el-button>\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" v-else>已投递</el-button>\n\t\t\t\t\t\t\t\t<el-button @click=\"handleCollect('form')\" class=\"el-icon-star-off\">收藏职位</el-button>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<!-- <el-button type=\"primary\" @click=\"handleDelivery('form')\" v-if=\"temp == 1\">投递简历</el-button> -->\n\t\t\t\t\t\t\t<!-- <el-button @click=\"handleCollect('form')\" v-if=\"temp == 1\">收藏职位</el-button> -->  \n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<el-form-item  v-else><span class=\"group-not\">您在本次职位浏览中的权限是有限的(无法投递简历等..)</span></el-form-item>\n\t\t\t\t\t</el-form>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t</div>\n\n\t\t<el-dialog  \n\t\t:visible.sync=\"outMap\"\n\t\tappend-to-body\n\t\tclass=\"mapUI\">\n\t\t\t<!-- 地图 -->\n\t\t\t<div>\n\t\t\t\t<div id=\"container\" style=\"height:660px;\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"mapUI-describe\">\n\t\t\t\t<!-- <div>\n\t\t\t\t\t<span>当前坐标:</span> \n\t\t\t\t\t<span>{{mapData.point}}</span>\n\t\t\t\t</div> -->\n\t\t\t\t<div>\n\t\t\t\t\t<span>省份:</span>\n\t\t\t\t\t<span>{{mapData.city}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>目的地:</span>\n\t\t\t\t\t<span>{{mapData.district}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>公司:</span>\n\t\t\t\t\t<span>{{form.company_name}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>具体位置:</span>\n\t\t\t\t\t<span>{{mapData.address}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<span>退出地图预览</span>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t<el-button type=\"primary\" round @click=\"outMap=false\">退出</el-button>\n\t\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<!-- <div>你可能想找:</div>\n\t\t\t\t<div v-if=\"mapData.searchList\" class=\"searchList\">\n\t\t\t\t\t<div v-for=\"(item,index) in mapData.searchList\" :key=\"index\" @click=\"form.company_name = item.title\"\n\t\t\t\t\t:title=\"item.address\" >\n\t\t\t\t\t\t<span @click=\"showMap\">({{item.address.substring(0,2)}}){{item.title}}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div> -->\n\t\t\t</div>\n\t\t</el-dialog>\n\t\t\n\t</div>\n</template>\n\n<script>\nimport { Position } from '@/model/position'\nimport { Application } from '@/model/application'\nimport { Resume } from '@/model/resume'\nimport { Favor } from '@/model/favor'\nimport Vue from 'vue'\nimport Utils from \"@/lin/util/util\"\nimport User from '@/lin/model/user'\n\nimport store from '@/store';\nimport router from '../../router'\nimport provinces from \"@/lin/util/provinces\"\nimport { VueJsonp } from 'vue-jsonp'\nVue.use(VueJsonp)\n\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    detailPositionID: {\n      \ttype: Number,\n    },\n    flag: {\n\t\ttype: Boolean,\n\t\tdefault: true,\n    },\n    temp: {\n\t\ttype: Number,\n\t\tdefault: 0,\n    },\n  },\n  data() {\n    return {\n\t\tme:null,\n\t\thr:null,\n\t\tcity:null,\n\t\tloading: false,\n\t\toutMap : false,\n\t\tform: {},\n\t\tlist: {\n\t\t\tuser_id: '',\n\t\t\tposition_id: '',\n\t\t\tresume_id: '',\n\t\t\thr_id: '',\n\t\t\tcompany_id: '',\n\t\t},\n\t\tcollect: {},\n\t\tmapData:{point:\"\",city:null,district:null,searchList:null,address:null},\n\t\tdeAvatar:require(\"@/assets/image/user/94bf413e-7176-4713-bc08-fbfa44ac0f11.png\")\n    }\n  },\n  \tasync mounted() {\n\t\tthis.loading = true\n\t\tconst res = await Position.getById(this.detailPositionID)\n\t\t// 更新职位浏览量(每进入一次职位详情页面，职位浏览量加一)\n\t\tawait Position.updateHits(this.detailPositionID)\n\t\tthis.form = res\n\t\tthis.loading = false;\n\t\tthis.hr = await User.getID_UserData(this.form.hr_id)\n\t\tthis.hr.avatar = this.hr.avatar!=null ? this.hr.avatar : this.deAvatar\n\t\t\n\t\t// 获取当前工作地点处于的省份\n\t\tprovinces.forEach((item,index) => {\n\t\t\titem.city.forEach((itt, idx) => {\n\t\t\t\tif (itt.name.indexOf(this.form.city)!=-1) {\n\t\t\t\t\tthis.city = item.name\n\t\t\t\t}else{\n\t\t\t\t\t// 如果 当前公司地址属于附属城市,那么判定当前城市的所有附属城市中是否有当前城市开头的,以\"标识\n\t\t\t\t\tif(JSON.stringify(itt.districtAndCounty).indexOf('\"'+this.form.city)!=-1){\n\t\t\t\t\t\tthis.city = item.name\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\t// console.log(\"读取到的权限\",store.getters.user);\n\t\tif (store.getters.user){\n\t\t\t// 未登录状态和hr不执行后续代码\n\t\t\tthis.me = store.getters.user;\n\t\t\tif(this.me)return;\n\t\t\tthis.getInfo()\n\t\t}\n  },\n  \tmethods: {\n\t\tasync handlePass(val) {\n\t\tconst res = await Position.updateState(this.detailPositionID, 1)\n\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t// 返回查询所有未审核职位的页面\n\t\t\tthis.$emit('detailClose')\n\t\t}\n\t\t},\n\t\tasync handleFail(val) {\n\t\tconst res = await Position.updateState(this.detailPositionID, 2)\n\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t// 返回查询所有未审核职位的页面\n\t\t\tthis.$emit('detailClose')\n\t\t}\n\t\t},\n\t\tasync isDelive(val){\n\t\t\tif(!this.$store.getters.user) return;\n\t\t\tlet result = await Application.getByPositionIdAndUserId(this.detailPositionID, this.$store.getters.user.id);\n\t\t\t// console.log(\"result\",result);\n\t\t\treturn result;\n\t\t},\n\t\t// 投递简历\n\t\tasync handleDelivery(val) {\n\t\t\tif (this.$store.getters.user === null) {\n\t\t\t\tthis.$message.error(\"请注册登录后投递简历\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n\t\t\tconst flag = await Application.getByPositionIdAndUserId(this.detailPositionID, this.$store.getters.user.id)\n\t\t\tif (flag === false) {\n\t\t\t\t// 不能重复投递\n\t\t\t\tthis.$message.error(\"你已投递过该职位，不可重复投递\")\n\t\t\t} else {\n\t\t\t\t// 获取当前登录求职者的用户id\n\t\t\t\tthis.list.user_id = this.$store.getters.user.id\n\t\t\t\t// 获取当前投递简历的职位id\n\t\t\t\tthis.list.position_id = this.detailPositionID\n\t\t\t\t// 根据用户id查询绑定的简历id\n\t\t\t\tconst temp = await Resume.getByUserId(this.$store.getters.user.id)\n\t\t\t\tthis.list.resume_id = temp.resume_id\n\t\t\t\t// 根据职位id查询该职位所对应的hr_id\n\t\t\t\tconst result = await Position.getById(this.detailPositionID)\n\t\t\t\tthis.list.hr_id = result.hr_id\n\t\t\t\tthis.list.company_id = result.company_id\n\t\t\t\t// 调用创建申请的方法\n\t\t\t\tconst res = await Application.create(this.list)\n\t\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tasync getInfo() {\n\t\t\t// 获取当前登录求职者的用户id\n\t\t\tthis.list.user_id = this.$store.getters.user.id\n\t\t\t// 获取当前投递简历的职位id\n\t\t\tthis.list.position_id = this.detailPositionID\n\t\t\t// 根据用户id查询绑定的简历id\n\t\t\tconst temp = await Resume.getByUserId(this.$store.getters.user.id)\n\t\t\tthis.list.resume_id = temp.id\n\t\t\t// 根据职位id查询该职位所对应的hr_id\n\t\t\tconst result = await Position.getById(this.detailPositionID)\n\t\t\tthis.list.hr_id = result.hr_id\n\t\t\tthis.list.company_id = result.company_id\n\t\t},\n\t\t// 收藏职位\n\t\tasync handleCollect(val) {\n\t\t\tif (this.$store.getters.user === null) {\n\t\t\t\tthis.$message.error(\"请注册登录后收藏职位\")\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// 获取当前登录求职者的用户id\n\t\t\tthis.collect.user_id = this.$store.getters.user.id\n\t\t\t// 获取当前收藏的职位id\n\t\t\tthis.collect.position_id = this.detailPositionID\n\t\t\t// 调用添加收藏的方法\n\t\t\tconst res = await Favor.create(this.collect)\n\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t}\n\t\t},\n\t\tback() {\n\t\t\t// this.$router.go(-1)\n\t\t\t// 由于showEdit这个变量是在父组件定义的，因此不能在子组件改变该变量的值，可以使用事件传递的方式，当点击了返回按钮，触发的事件处理机制交给父组件去处理\n\t\t\tthis.$emit('detailClose')\n\t\t},\n\t\t// 查看地图\n\t\tshowMap(){\n\t\t\t// 显示地图组件,优先执行,保证地图组件能够正常创建\n\t\t\tthis.outMap = true;\n\t\t\tthis.searchMap()\n\t\t},\n\t\tsearchMap(){\n\t\t\tthis.$message.success(\"正在获取地图数据\")\n\t\t\tlet url = \"https://apis.map.qq.com/ws/place/v1/suggestion\";\n\t\t\tlet __this = this;\n\t\t\tthis.$jsonp(url, {\n\t\t\t\t\tkey: Utils.getMapAPI(),\n\t\t\t\t\tregion: this.form.city,\n\t\t\t\t\tkeyword: this.form.company_name,\n\t\t\t\t\toutput: \"jsonp\",\n\t\t\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tres.data.forEach((item) => {\n\t\t\t\t\titem.value = item.title;//因为element的远程搜索只能识别value所以需要对返回的数据进行一下处理\n\t\t\t\t});\n\t\t\t\t// console.log(\"res.data\",res.data);\n\t\t\t\t__this.mapData.searchList = res.data\n\t\t\t\tif(res.data[0]){\n\t\t\t\t\t__this.mapData.address = res.data[0].address\n\t\t\t\t\t__this.mapData.city = res.data[0].province\n\t\t\t\t\t__this.mapData.district = res.data[0].city + \"/\"+res.data[0].district\n\t\t\t\t\t__this.createMap(res.data[0].location.lat,res.data[0].location.lng)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\tconsole.log(err);\n\t\t\t});\n\t\t},\n\t\t// 生成地图数据\n\t\tcreateMap(w,h){\n\t\t\t//步骤：定义map变量 调用 qq.maps.Map() 构造函数   获取地图显示容器\n\t\t\tvar myLatlng = new qq.maps.LatLng(w,h);\n\t\t\tthis.mapData.point = w+\",\"+h;\n\t\t\t//定义工厂模式函数\n\t\t\tvar myOptions = {\n\t\t\t\tzoom: 15,               //设置地图缩放级别\n\t\t\t\tcenter: myLatlng,      //设置中心点样式\n\t\t\t\tmapTypeId: qq.maps.MapTypeId.ROADMAP  \n\t\t\t}\n\t\t\t//获取父元素\n\t\t\tlet content = document.getElementById(\"container\");\n\t\t\t//循环删除子元素，一直删除第一个子元素直到没有子元素即为清空\n\t\t\twhile (content.hasChildNodes()) {\n\t\t\t\tcontent.removeChild(content.firstChild);\n\t\t\t}\n\t\t\t//获取dom元素添加地图信息\n\t\t\tvar map = new qq.maps.Map(document.getElementById(\"container\"), myOptions);\n\t\t\t//给定位的位置添加图片标注\n\t\t\tvar marker = new qq.maps.Marker({\n\t\t\t\tposition: myLatlng,\n\t\t\t\tmap: map\n\t\t\t});\n\t\t\t//给定位的位置添加文本标注\n\t\t\tvar marker1 = new qq.maps.Label({\n\t\t\t\tposition: myLatlng,\n\t\t\t\tmap: map,\n\t\t\t\tcontent:this.form.company_name\n\t\t\t});\n\t\t\tthis.$message.success(\"获取地图数据成功!\")\n\t\t},\n\t\tcontactHR(){\n\t\t\tlet msg = {\n\t\t\t\trecvId:this.form.hr_id,\n\t\t\t\tself:{name:this.me.nickname,icon:this.me.avatar},\n\t\t\t\ttarget:{name:this.hr.name,icon:this.hr.avatar},\n\t\t\t\ttime:new Date().toLocaleString()\n\t\t\t}\n\t\t\tlet data = {type:\"handToken\",info:msg}\n\t\t\tthis.$ws.ws.send(JSON.stringify(data))\n\t\t\tthis.$router.push(\"/ws-msg\")\n\t\t}\n\t},\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  \tmargin: 0;\n}\n// 父窗口的类\n.container {\n\ttext-align: left;\n\n\t.title {\n\t\theight: 59px;\n\t\tline-height: 59px;\n\t\tcolor: $parent-title-color;\n\t\tfont-size: 16px;\n\t\tfont-weight: 500;\n\t\ttext-indent: 40px;\n\n\t\t.back {\n\t\t\tfloat: right;\n\t\t\tmargin-right: 40px;\n\t\t\tcursor: pointer;\n\t\t}\n  }\n\n  .wrap {\n    padding: 20px;\n\n\t.hr-name {\n\t\tmargin-left: 40px;\n\t\tmargin-right: 10px;\n\t}\n\t.hr-img {\n\t\tdisplay: inline-block;\n\t\twidth: 32px;\n\t\theight: 32px;\n\t\tposition: absolute;\n\t\tleft: 0;\n\t}\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n@media screen and (max-width :1000px){\n\t.mapUI-describe {\n\t\twidth: 250px;\n\t}\n}\n.mapUI {\n\toverflow: hidden;\n\tz-index: 9999;\n\t.mapUI-describe {\n\t\tbackground: #0000005e;\n\t\tcolor: white !important;\n\t\tpadding: 5px;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tright: 0;\n\t\tborder-radius: 5px;\n\t\tborder-top-left-radius: 0;\n\t\tborder-bottom-right-radius: 0;\n\t\ttransition: rgba,width .5s;\n\t\t&:hover {\n\t\t\tbackground: rgba(0, 0, 0, 0.7);\n\t\t}\n\n\t\t>div {\n\t\t\tmargin-bottom: 20px;\n\t\t\t>span {\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\t\t\t>span:nth-child(1){\n\t\t\t\twidth: 30%;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\t\t\t>span:nth-child(2){\n\t\t\t\twidth: 70%;\n\t\t\t\ttext-align: right;\n\t\t\t\t// color: black;\n\t\t\t}\n\t\t}\n\t\t.searchList {\n\t\t\tborder: 1px solid black;\n\t\t\theight: 200px;\n\t\t\toverflow: auto;\n\n\t\t\tdiv {\n\t\t\t\tmargin: 10px 0;\n\t\t\t\tpadding: 10px 0;\n\t\t\t\ttext-align: center;\n\t\t\t\tcolor: black;\n\t\t\t\tfont-size: 16px;\n\t\t\t}\n\t\t\tdiv:hover {\n\t\t\t\tbackground-color: #0000002b;\n\t\t\t}\n\t\t\tdiv::-webkit-scrollbar {\n\t\t\t\twidth: 2px !important;\n\t\t\t}\n\t\t}\n\t}\n\t.el-dialog {\n\t\tmargin-top: 10vh !important;\n\t\twidth: 80% !important;\n\t\tfont-size: 25px;\n\t}\n\t::v-deep .el-dialog__header {\n\t\tdisplay: none;\n\t}\n}\n\n.login-msg >div{\n\tpadding: 0 !important;\n\ttransition: all .5s;\n\t&:hover{\n\t\tcolor: #454641;\n\t\tbackground: none;\n\t\t// border: 1px solid #aaffaa;\n\t}\n}\n.group-not{\n\tcolor: crimson !important;\n\tcursor: pointer;\n\tpointer-events: none;\n\tuser-select: none;\n}\n\n</style>\n"]}]}