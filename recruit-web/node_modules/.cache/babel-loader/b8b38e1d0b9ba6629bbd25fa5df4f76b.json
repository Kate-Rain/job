{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\recruit\\recruit-system\\recruit-web\\src\\plugin\\lin-cms-ui\\model\\movie.js","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\plugin\\lin-cms-ui\\model\\movie.js","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport { movieList } from '../simulation/movie';\n\nvar Movie = /*#__PURE__*/function () {\n  function Movie() {\n    _classCallCheck(this, Movie);\n  }\n\n  _createClass(Movie, [{\n    key: \"getTop250\",\n    value: function getTop250() {\n      var start = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n      var arr = [];\n      var tempList = movieList.slice();\n      var currentList = tempList.splice(start, count);\n      currentList.forEach(function (element, index) {\n        var tempCasts = [];\n        var tempDirectors = [];\n        element.casts.forEach(function (el) {\n          tempCasts.push(el.name);\n        });\n        element.directors.forEach(function (el) {\n          tempDirectors.push(el.name);\n        });\n        arr.push({\n          title: element.title,\n          originalTitle: element.original_title,\n          year: element.year,\n          rating: element.rating.average,\n          casts: tempCasts.join('/'),\n          directors: tempDirectors.join('/'),\n          genres: element.genres.join('/'),\n          rank: index + 1 + start,\n          sorting: 50,\n          recommend: 0,\n          remark: '这是一部不错的电影',\n          editFlag: false,\n          thumb: element.thumb ? element.thumb : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png'\n        });\n      });\n      return arr;\n    }\n  }, {\n    key: \"getDataByQuery\",\n    value: function getDataByQuery() {\n      var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var arr = [];\n\n      for (var index = 0; index < movieList.length; index++) {\n        var element = movieList[index];\n\n        if (element.title.match(query)) {\n          (function () {\n            var tempCasts = [];\n            var tempDirectors = [];\n            element.casts.forEach(function (el) {\n              tempCasts.push(el.name);\n            });\n            element.directors.forEach(function (el) {\n              tempDirectors.push(el.name);\n            });\n            arr.push({\n              title: element.title,\n              originalTitle: element.original_title,\n              year: element.year,\n              rating: element.rating.average,\n              casts: tempCasts.join('/'),\n              directors: tempDirectors.join('/'),\n              genres: element.genres.join('/'),\n              rank: index + 1,\n              sorting: 50,\n              recommend: 0,\n              remark: '这是一部不错的电影',\n              editFlag: false,\n              thumb: element.thumb ? element.thumb : 'https://consumerminiaclprd01.blob.core.chinacloudapi.cn/miniappbackground/sfgmember/lin/270-400.png'\n            });\n          })();\n        }\n      }\n\n      return arr;\n    }\n  }]);\n\n  return Movie;\n}();\n\nexport default new Movie();",null]}