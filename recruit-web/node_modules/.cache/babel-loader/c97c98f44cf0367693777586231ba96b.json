{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-detail.vue","mtime":1743856409982},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Company } from '@/model/company';\nimport { Follow } from '@/model/follow';\nimport UploadImgs from '@/component/base/upload-image';\nexport default {\n  components: {\n    UploadImgs: UploadImgs\n  },\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    detailCompanyID: {\n      type: Number\n    },\n    flag: {\n      type: Boolean,\n      default: true\n    },\n    temp: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      list: {},\n      maxNum: 1,\n      initData: [],\n      poster: {}\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              _context.next = 3;\n              return Company.getById(this.detailCompanyID);\n\n            case 3:\n              res = _context.sent;\n              this.poster = [{\n                id: res.id,\n                display: res.poster\n              }];\n              this.initData = [{\n                id: res.id,\n                display: res.logo\n              }];\n              this.form = res;\n              this.loading = false;\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    handlePass: function () {\n      var _handlePass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Company.updateState(this.detailCompanyID, 1);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handlePass(_x) {\n        return _handlePass.apply(this, arguments);\n      }\n\n      return handlePass;\n    }(),\n    handleFail: function () {\n      var _handleFail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Company.updateState(this.detailCompanyID, 2);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleFail(_x2) {\n        return _handleFail.apply(this, arguments);\n      }\n\n      return handleFail;\n    }(),\n    // 关注公司\n    handleFollow: function () {\n      var _handleFollow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前关注的公司id\n\n                this.list.company_id = this.detailCompanyID; // 调用添加关注的方法\n\n                _context4.next = 4;\n                return Follow.create(this.list);\n\n              case 4:\n                res = _context4.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleFollow(_x3) {\n        return _handleFollow.apply(this, arguments);\n      }\n\n      return handleFollow;\n    }(),\n    // 在新标签页打开图片预览\n    handleImagePreview: function handleImagePreview(file) {\n      // 如果有file.url就使用file.url，否则使用file.display\n      var imageUrl = file.url || file.display;\n\n      if (!imageUrl) {\n        this.$message.warning('没有可预览的图片');\n        return;\n      } // 在新标签页中打开图片\n\n\n      window.open(imageUrl, '_blank');\n    },\n    back: function back() {\n      // 由于showEdit这个变量是在父组件定义的，因此不能在子组件改变该变量的值，可以使用事件传递的方式，当点击了返回按钮，触发的事件处理机制交给父组件去处理\n      this.$emit('detailClose');\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,SACAA,OADA,QAEA,iBAFA;AAGA,SACAC,MADA,QAEA,gBAFA;AAGA;AAEA;EACAC;IACAC;EADA,CADA;EAIA;EACAC;IACA;IACAC;MACAC;IADA,CAFA;IAKAC;MACAD,aADA;MAEAE;IAFA,CALA;IASAC;MACAH,YADA;MAEAE;IAFA;EATA,CALA;EAmBAE,IAnBA,kBAmBA;IACA;MACAC,cADA;MAEAC,QAFA;MAGAC,QAHA;MAIAC,SAJA;MAKAC,YALA;MAMAC;IANA;EAQA,CA5BA;EA6BAC,OA7BA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cA8BA;cA9BA;cAAA,OA+BAjB,qCA/BA;;YAAA;cA+BAkB,GA/BA;cAgCA;gBACAC,UADA;gBAEAC;cAFA;cAIA;gBACAD,UADA;gBAEAC;cAFA;cAIA;cACA;;YAzCA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EA2CAC;IACAC,UADA;MAAA,+FACAC,GADA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAEAvB,4CAFA;;cAAA;gBAEAkB,GAFA;;gBAGA;kBACA;kBACA;gBACA;;cANA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAQAM,UARA;MAAA,+FAQAD,GARA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OASAvB,4CATA;;cAAA;gBASAkB,GATA;;gBAUA;kBACA;kBACA;gBACA;;cAbA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAeA;IACAO,YAhBA;MAAA,iGAgBAF,GAhBA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAiBA;gBACA,gDAlBA,CAmBA;;gBACA,4CApBA,CAqBA;;gBArBA;gBAAA,OAsBAtB,wBAtBA;;cAAA;gBAsBAiB,GAtBA;;gBAuBA;kBACA;gBACA;;cAzBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IA2BA;IACAQ,kBA5BA,8BA4BAC,IA5BA,EA4BA;MACA;MACA;;MACA;QACA;QACA;MACA,CANA,CAOA;;;MACAC;IACA,CArCA;IAsCAC,IAtCA,kBAsCA;MACA;MACA;IACA;EAzCA;AA3CA","names":["Company","Follow","components","UploadImgs","props","detailCompanyID","type","flag","default","temp","data","loading","form","list","maxNum","initData","poster","mounted","res","id","display","methods","handlePass","val","handleFail","handleFollow","handleImagePreview","file","window","back"],"sourceRoot":"src/view/company","sources":["company-detail.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">\n      <span>公司详细信息</span> <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <el-form-item label=\"公司名称\" prop=\"name\">\n              <el-input size=\"medium\" v-model=\"form.name\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司外文名\" prop=\"foreign_name\">\n              <el-input size=\"medium\" v-model=\"form.foreign_name\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"总部地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司logo\" prop=\"logo\">\n              <upload-imgs :max-num=\"maxNum\" ref=\"uploadLogoEle\" :value=\"initData\" disabled \n                @on-preview=\"handleImagePreview\" />\n            </el-form-item>\n            <el-form-item label=\"公司海报\" prop=\"poster\">\n              <upload-imgs :max-num=\"maxNum\" ref=\"uploadPosterEle\" :value=\"poster\" disabled \n                @on-preview=\"handleImagePreview\" />\n            </el-form-item>\n            <el-form-item label=\"公司使命\" prop=\"mission\">\n              <el-input size=\"medium\" v-model=\"form.mission\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\" prop=\"description\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.description\" disabled>\n              </el-input>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <!--通过公司的状态属性state来控制通过按钮和不通过按钮是否显示-->\n              <el-button type=\"primary\" @click=\"handlePass('form')\" v-if=\"form.state === 0 && flag\">通 过</el-button>\n              <el-button @click=\"handleFail('form')\" v-if=\"form.state == 0 && flag\">不通过</el-button>\n              <el-button type=\"primary\" @click=\"handleFollow('form')\" v-permission=\"{ permission: '新增关注' }\"\n                v-if=\"temp == 1\">关注公司</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {\n  Company\n} from '@/model/company'\nimport {\n  Follow\n} from '@/model/follow'\nimport UploadImgs from '@/component/base/upload-image'\n\nexport default {\n  components: {\n    UploadImgs,\n  },\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    detailCompanyID: {\n      type: Number,\n    },\n    flag: {\n      type: Boolean,\n      default: true,\n    },\n    temp: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {},\n      list: {},\n      maxNum: 1,\n      initData: [],\n      poster: {}\n    }\n  },\n  async mounted() {\n    this.loading = true\n    const res = await Company.getById(this.detailCompanyID)\n    this.poster = [{\n      id: res.id,\n      display: res.poster,\n    }]\n    this.initData = [{\n      id: res.id,\n      display: res.logo,\n    },]\n    this.form = res\n    this.loading = false\n  },\n  methods: {\n    async handlePass(val) {\n      const res = await Company.updateState(this.detailCompanyID, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('detailClose')\n      }\n    },\n    async handleFail(val) {\n      const res = await Company.updateState(this.detailCompanyID, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('detailClose')\n      }\n    },\n    // 关注公司\n    async handleFollow(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前关注的公司id\n      this.list.company_id = this.detailCompanyID\n      // 调用添加关注的方法\n      const res = await Follow.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n    // 在新标签页打开图片预览\n    handleImagePreview(file) {\n      // 如果有file.url就使用file.url，否则使用file.display\n      const imageUrl = file.url || file.display;\n      if (!imageUrl) {\n        this.$message.warning('没有可预览的图片');\n        return;\n      }\n      // 在新标签页中打开图片\n      window.open(imageUrl, '_blank');\n    },\n    back() {\n      // 由于showEdit这个变量是在父组件定义的，因此不能在子组件改变该变量的值，可以使用事件传递的方式，当点击了返回按钮，触发的事件处理机制交给父组件去处理\n      this.$emit('detailClose')\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n\n  .image-preview-container {\n    position: relative;\n    \n    .preview-button {\n      position: absolute;\n      right: 0;\n      top: 0;\n      background-color: rgba(255, 255, 255, 0.8);\n      border-radius: 4px;\n      padding: 5px 10px;\n      z-index: 2;\n      transition: all 0.3s;\n      \n      &:hover {\n        background-color: rgba(64, 158, 255, 0.1);\n      }\n    }\n  }\n}\n</style>"]}]}