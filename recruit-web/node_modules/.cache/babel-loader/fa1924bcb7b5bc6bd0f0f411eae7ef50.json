{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\log\\log.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\log\\log.vue","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport log from 'lin/model/log';\nimport { searchLogKeyword } from 'lin/util/search';\nimport LinSearch from '@/component/base/search/lin-search';\nimport LinDatePicker from '@/component/base/date-picker/lin-date-picker';\nimport moment from 'moment';\nexport default {\n  components: {\n    LinSearch: LinSearch,\n    LinDatePicker: LinDatePicker\n  },\n  data: function data() {\n    return {\n      log: null,\n      value: '',\n      logs: [],\n      users: [],\n      searchUser: '',\n      more: false,\n      loading: false,\n      finished: false,\n      isSearch: false,\n      error: false,\n      searchKeyword: '',\n      searchDate: [],\n      keyword: null,\n      totalCount: 0\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['permissions', 'user'])),\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              _context.next = 3;\n              return this.initPage();\n\n            case 3:\n              this.loading = false;\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    // 用户搜索\n    searchUser: function searchUser(user) {\n      this.keyword = user;\n\n      if (this.searchKeyword) {\n        this.keyword = \"\".concat(user, \" \").concat(this.searchKeyword);\n      }\n\n      if (this.searchDate.length) {\n        this.keyword = \"\".concat(user, \" \").concat(this.searchKeyword, \" \").concat(this.searchDate);\n      }\n\n      this.searchPage();\n    },\n    // 关键字搜索\n    searchKeyword: function searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal;\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(newVal);\n        }\n\n        if (this.searchDate.length) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(newVal, \" \").concat(this.searchDate);\n        }\n      } else {\n        this.keyword = '';\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(this.searchUser);\n        }\n\n        if (this.searchDate.length) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(this.searchDate);\n        }\n\n        this.$refs.searchKeyword.clear();\n      }\n\n      this.searchPage();\n    },\n    // 日期搜索\n    searchDate: function searchDate(newDate) {\n      if (newDate && newDate.length) {\n        this.keyword = \"\".concat(newDate[0], \"\\u81F3\").concat(newDate[1]);\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(newDate[0], \"\\u81F3\").concat(newDate[1]);\n        }\n\n        if (this.searchKeyword) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(this.searchKeyword, \" \").concat(newDate[0], \"\\u81F3\").concat(newDate[1]);\n        }\n      } else {\n        this.keyword = '';\n        this.isSearch = false;\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(this.searchUser);\n        }\n\n        if (this.searchKeyword) {\n          this.keyword = \"\".concat(this.searchUser, \" \").concat(this.searchKeyword);\n        }\n\n        this.$refs.searchDate.clear();\n      }\n\n      this.searchPage();\n    }\n  },\n  methods: {\n    dateFormat: function dateFormat(row) {\n      return moment(row.create_time).format(\"yyyy-MM-DD hh:mm:ss\");\n    },\n    // 下拉框\n    handleCommand: function handleCommand(user) {\n      this.searchUser = user[0]; // eslint-disable-line\n    },\n    // 页面初始化\n    initPage: function () {\n      var _initPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n\n                if (!(this.user.admin || this.permissions.includes('查询日志记录的用户'))) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 4;\n                return log.getLoggedUsers({});\n\n              case 4:\n                this.users = _context2.sent;\n\n              case 5:\n                _context2.next = 7;\n                return log.getLogs({\n                  page: 0\n                });\n\n              case 7:\n                res = _context2.sent;\n                this.logs = res.items;\n                _context2.next = 14;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.error(_context2.t0.data);\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 11]]);\n      }));\n\n      function initPage() {\n        return _initPage.apply(this, arguments);\n      }\n\n      return initPage;\n    }(),\n    // 条件检索\n    searchPage: function () {\n      var _searchPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var name, res, logs;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.totalCount = 0;\n                this.logs = [];\n                this.loading = true;\n                this.finished = false;\n                name = this.searchUser === '全部人员' ? '' : this.searchUser;\n                _context3.next = 7;\n                return log.searchLogs({\n                  page: 0,\n                  // 初始化\n                  keyword: this.searchKeyword,\n                  name: name,\n                  start: this.searchDate[0],\n                  end: this.searchDate[1]\n                });\n\n              case 7:\n                res = _context3.sent;\n\n                if (!res) {\n                  _context3.next = 18;\n                  break;\n                }\n\n                logs = res.items;\n                this.totalCount = res.total;\n\n                if (!this.searchKeyword) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                _context3.next = 14;\n                return searchLogKeyword(this.searchKeyword, logs);\n\n              case 14:\n                logs = _context3.sent;\n\n              case 15:\n                this.logs = logs;\n                _context3.next = 19;\n                break;\n\n              case 18:\n                this.finished = true;\n\n              case 19:\n                this.isSearch = true;\n                this.loading = false;\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchPage() {\n        return _searchPage.apply(this, arguments);\n      }\n\n      return searchPage;\n    }(),\n    // 下一页\n    nextPage: function () {\n      var _nextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var res, moreLogs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.more = true;\n                _context4.prev = 1;\n\n                if (!this.isSearch) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 5;\n                return log.moreSearchPage();\n\n              case 5:\n                res = _context4.sent;\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.next = 10;\n                return log.moreLogPage();\n\n              case 10:\n                res = _context4.sent;\n\n              case 11:\n                moreLogs = res.items;\n\n                if (!(this.isSearch && this.searchKeyword)) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _context4.next = 15;\n                return searchLogKeyword(this.searchKeyword, moreLogs);\n\n              case 15:\n                moreLogs = _context4.sent;\n\n              case 16:\n                this.logs = this.logs.concat(moreLogs);\n                this.more = false;\n                _context4.next = 25;\n                break;\n\n              case 20:\n                _context4.prev = 20;\n                _context4.t0 = _context4[\"catch\"](1);\n                console.error('error', _context4.t0);\n\n                if (_context4.t0.data.code === 10220) {\n                  this.finished = true;\n                }\n\n                this.more = false;\n\n              case 25:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 20]]);\n      }));\n\n      function nextPage() {\n        return _nextPage.apply(this, arguments);\n      }\n\n      return nextPage;\n    }(),\n    searchByUser: function searchByUser(user) {\n      this.searchUser = user;\n    },\n    onQueryChange: function onQueryChange(query) {\n      // 处理带空格的情况\n      this.searchKeyword = query.trim();\n    },\n    handleDateChange: function handleDateChange(date) {\n      this.searchDate = date;\n    },\n    // 清空检索\n    backInit: function () {\n      var _backInit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.searchUser = '';\n                this.searchKeyword = '';\n                this.searchDate = [];\n                this.keyword = '';\n                this.logs = [];\n                this.isSearch = false;\n                this.loading = true;\n                _context5.next = 9;\n                return this.initPage();\n\n              case 9:\n                this.loading = false;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function backInit() {\n        return _backInit.apply(this, arguments);\n      }\n\n      return backInit;\n    }()\n  },\n  destroyed: function destroyed() {\n    log.init();\n  }\n};",{"version":3,"mappings":"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","names":["components","LinSearch","LinDatePicker","data","log","value","logs","users","searchUser","more","loading","finished","isSearch","error","searchKeyword","searchDate","keyword","totalCount","computed","mapGetters","created","watch","user","newVal","newDate","methods","dateFormat","row","handleCommand","initPage","page","res","console","searchPage","name","start","end","searchLogKeyword","nextPage","moreLogs","searchByUser","onQueryChange","query","handleDateChange","date","backInit","destroyed"],"sourceRoot":"src/view/log","sources":["log.vue"],"sourcesContent":["<template>\n  <div class=\"log\">\n    <sticky-top>\n      <div class=\"log-header\">\n        <div class=\"header-left\">\n          <p class=\"title\">日志信息</p>\n        </div>\n        <div class=\"header-right\" v-permission=\"'搜索日志'\">\n          <lin-search @query=\"onQueryChange\" ref=\"searchKeyword\" />\n          <el-dropdown\n            size=\"medium\"\n            style=\"margin: 0 10px;\"\n            @command=\"handleCommand\"\n            v-permission=\"'查询日志记录的用户'\"\n          >\n            <el-button size=\"medium\">\n              {{ searchUser ? searchUser : '全部人员' }}\n              <i class=\"el-icon-arrow-down el-icon--right\"></i>\n            </el-button>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item :command=\"['全部人员']\">全部人员</el-dropdown-item>\n              <el-dropdown-item\n                icon=\"el-icon-user-solid\"\n                v-for=\"(user, index) in users.items\"\n                :key=\"index\"\n                :command=\"[user]\"\n              >{{ user }}</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n          <lin-date-picker @dateChange=\"handleDateChange\" ref=\"searchDate\" class=\"date\"></lin-date-picker>\n        </div>\n      </div>\n      <el-divider v-if=\"!keyword\"></el-divider>\n    </sticky-top>\n    <transition name=\"fade\">\n      <div class=\"search\" v-if=\"keyword\">\n        <p class=\"search-tip\">\n          搜索“\n          <span class=\"search-keyword\">{{ keyword }}</span>”， 找到\n          <span class=\"search-num\">{{ totalCount }}</span> 条日志信息\n        </p>\n        <button class=\"search-back\" @click=\"backInit\">返回全部日志</button>\n      </div>\n    </transition>\n    <div class=\"content\" v-loading=\"loading\">\n      <el-table :data=\"logs\" style=\"width: 100%\">\n        <el-table-column prop=\"username\" label=\"用户名称\" sortable></el-table-column>\n        <el-table-column prop=\"message\" label=\"操作信息\"></el-table-column>\n        <el-table-column prop=\"method\" label=\"请求方法\"></el-table-column>\n        <el-table-column prop=\"path\" label=\"请求路径\"></el-table-column>\n        <el-table-column prop=\"permission\" label=\"所属权限\"></el-table-column>\n        <el-table-column prop=\"create_time\" label=\"操作时间\">\n          <template slot-scope=\"scope\">\n            <span>{{ dateFormat(scope.row) }}</span>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <div v-if=\"logs && logs.length\">\n        <el-divider></el-divider>\n        <div class=\"more\" :class=\"{ nothing: finished }\">\n          <i v-if=\"more\" class=\"iconfont icon-loading\"></i>\n          <div v-show=\"!more && !finished\" @click=\"nextPage\">\n            <span>查看更多</span>\n            <i class=\"iconfont icon-gengduo\" style=\"font-size:14px\"></i>\n          </div>\n          <div v-if=\"finished\">\n            <span>{{ totalCount === 0 ? '暂无数据' : '没有更多数据了' }}</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"nothing\" v-else>暂无日志信息</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport log from 'lin/model/log'\nimport { searchLogKeyword } from 'lin/util/search'\nimport LinSearch from '@/component/base/search/lin-search'\nimport LinDatePicker from '@/component/base/date-picker/lin-date-picker'\nimport moment from 'moment'\n\nexport default {\n  components: {\n    LinSearch,\n    LinDatePicker,\n  },\n  data() {\n    return {\n      log: null,\n      value: '',\n      logs: [],\n      users: [],\n      searchUser: '',\n      more: false,\n      loading: false,\n      finished: false,\n      isSearch: false,\n      error: false,\n      searchKeyword: '',\n      searchDate: [],\n      keyword: null,\n      totalCount: 0,\n    }\n  },\n  computed: {\n    ...mapGetters(['permissions', 'user']),\n  },\n  async created() {\n    this.loading = true\n    await this.initPage()\n    this.loading = false\n  },\n  watch: {\n    // 用户搜索\n    searchUser(user) {\n      this.keyword = user\n      if (this.searchKeyword) {\n        this.keyword = `${user} ${this.searchKeyword}`\n      }\n      if (this.searchDate.length) {\n        this.keyword = `${user} ${this.searchKeyword} ${this.searchDate}`\n      }\n      this.searchPage()\n    },\n    // 关键字搜索\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser} ${newVal}`\n        }\n        if (this.searchDate.length) {\n          this.keyword = `${this.searchUser} ${newVal} ${this.searchDate}`\n        }\n      } else {\n        this.keyword = ''\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser}`\n        }\n        if (this.searchDate.length) {\n          this.keyword = `${this.searchUser} ${this.searchDate}`\n        }\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchPage()\n    },\n    // 日期搜索\n    searchDate(newDate) {\n      if (newDate && newDate.length) {\n        this.keyword = `${newDate[0]}至${newDate[1]}`\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser} ${newDate[0]}至${newDate[1]}`\n        }\n        if (this.searchKeyword) {\n          this.keyword = `${this.searchUser} ${this.searchKeyword} ${newDate[0]}至${newDate[1]}`\n        }\n      } else {\n        this.keyword = ''\n        this.isSearch = false\n        if (this.searchUser) {\n          this.keyword = `${this.searchUser}`\n        }\n        if (this.searchKeyword) {\n          this.keyword = `${this.searchUser} ${this.searchKeyword}`\n        }\n        this.$refs.searchDate.clear()\n      }\n      this.searchPage()\n    },\n  },\n  methods: {\n    dateFormat(row) {\n      return moment(row.create_time).format(\"yyyy-MM-DD hh:mm:ss\")\n    },\n    // 下拉框\n    handleCommand(user) {\n      this.searchUser = user[0] // eslint-disable-line\n    },\n    // 页面初始化\n    async initPage() {\n      try {\n        if (this.user.admin || this.permissions.includes('查询日志记录的用户')) {\n          this.users = await log.getLoggedUsers({})\n        }\n        const res = await log.getLogs({ page: 0 })\n        this.logs = res.items\n      } catch (err) {\n        console.error(err.data)\n      }\n    },\n    // 条件检索\n    async searchPage() {\n      this.totalCount = 0\n      this.logs = []\n      this.loading = true\n      this.finished = false\n      const name = this.searchUser === '全部人员' ? '' : this.searchUser\n      const res = await log.searchLogs({\n        page: 0, // 初始化\n        keyword: this.searchKeyword,\n        name,\n        start: this.searchDate[0],\n        end: this.searchDate[1],\n      })\n      if (res) {\n        let logs = res.items\n        this.totalCount = res.total\n        if (this.searchKeyword) {\n          logs = await searchLogKeyword(this.searchKeyword, logs)\n        }\n        this.logs = logs\n      } else {\n        this.finished = true\n      }\n      this.isSearch = true\n      this.loading = false\n    },\n    // 下一页\n    async nextPage() {\n      this.more = true\n      let res\n      try {\n        if (this.isSearch) {\n          res = await log.moreSearchPage()\n        } else {\n          res = await log.moreLogPage()\n        }\n\n        let moreLogs = res.items\n        if (this.isSearch && this.searchKeyword) {\n          moreLogs = await searchLogKeyword(this.searchKeyword, moreLogs)\n        }\n        this.logs = this.logs.concat(moreLogs)\n\n        this.more = false\n      } catch (error) {\n        console.error('error', error)\n\n        if (error.data.code === 10220) {\n          this.finished = true\n        }\n\n        this.more = false\n      }\n    },\n    searchByUser(user) {\n      this.searchUser = user\n    },\n    onQueryChange(query) {\n      // 处理带空格的情况\n      this.searchKeyword = query.trim()\n    },\n    handleDateChange(date) {\n      this.searchDate = date\n    },\n    // 清空检索\n    async backInit() {\n      this.searchUser = ''\n      this.searchKeyword = ''\n      this.searchDate = []\n      this.keyword = ''\n      this.logs = []\n      this.isSearch = false\n      this.loading = true\n      await this.initPage()\n      this.loading = false\n    },\n  },\n  destroyed() {\n    log.init()\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.log ::v-deep .el-button {\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n.log {\n  .log-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 20px;\n    margin-bottom: -24px;\n\n    .header-left {\n      float: left;\n\n      .title {\n        height: 59px;\n        line-height: 59px;\n        color: #4c76af;\n        font-size: 16px;\n        font-weight: 500;\n      }\n    }\n\n    .header-right {\n      float: right;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n\n  .search {\n    height: 52px;\n    width: 100%;\n    background: rgba(57, 99, 188, 0.1);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-top: 24px;\n\n    .search-tip {\n      margin-left: 40px;\n      height: 52px;\n      line-height: 52px;\n      color: #354058;\n      font-size: 14px;\n\n      .search-keyword {\n        color: $theme;\n      }\n\n      .search-num {\n        color: #f4516c;\n      }\n    }\n\n    .search-back {\n      margin: 8px 20px;\n      height: 32px;\n      background: #f4516c;\n      border: none;\n      border-radius: 2px;\n      color: #fff;\n      padding: 0 13px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n  }\n\n  .content {\n    padding: 40px 60px;\n\n    article {\n      position: relative;\n      margin-bottom: -24px;\n\n      section {\n        padding: 0 0 36px;\n        position: relative;\n\n        &:before {\n          content: \"\";\n          width: 1px;\n          top: 7px;\n          bottom: -17px;\n          left: 10.5px;\n          background: #f3f3f3;\n          position: absolute;\n        }\n\n        &:last-child:before {\n          display: none;\n        }\n\n        .point-time {\n          content: \"\";\n          position: absolute;\n          width: 10px;\n          height: 10px;\n          top: 2px;\n          left: 10px;\n          background: $theme;\n          margin-left: -4px;\n          border-radius: 50%;\n        }\n\n        time {\n          width: 15%;\n          display: block;\n          position: absolute;\n\n          span {\n            display: block;\n            text-align: right;\n          }\n        }\n\n        aside {\n          color: #45526b;\n          margin-left: 30px;\n\n          .things {\n            font-size: 14px;\n            color: #45526b;\n            margin-bottom: 15px;\n          }\n        }\n\n        .text-yellow {\n          color: #8c98ae;\n          font-size: 14px;\n          line-height: 20px;\n          padding-right: 30px;\n          float: left;\n        }\n\n        .brief {\n          font-size: 14px;\n          color: #c4c9d2;\n          height: 20px;\n          line-height: 20px;\n        }\n      }\n    }\n  }\n\n  .more {\n    height: 40px;\n    line-height: 40px;\n    color: $theme;\n    font-size: 14px;\n    margin-left: 28px;\n    cursor: pointer;\n    &.nothing {\n      cursor: text;\n    }\n\n    .icon-gengduo {\n      display: inline;\n      margin-left: 6px;\n    }\n\n    .icon-loading {\n      &:before {\n        display: inline-block;\n        animation: spin 1s linear infinite;\n      }\n    }\n  }\n}\n.nothing {\n  color: #45526b;\n  font-size: 14px;\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@media screen and (max-width: 1000px) {\n  .date {\n    display: none;\n  }\n}\n</style>\n<style>\n.strong {\n  color: #464dd5;\n}\n</style>\n"]}]}