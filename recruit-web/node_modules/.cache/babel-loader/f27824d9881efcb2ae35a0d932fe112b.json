{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue","mtime":1717914758000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Interview } from '@/model/interview';\nimport ResumeDetail from '@/view/resume/resume-detail';\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail: ResumeDetail\n  },\n  data: function data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      resultData: {\n        id: '',\n        status: '',\n        comments: ''\n      },\n      rules: {\n        status: [{\n          required: true,\n          message: '面试结果不能为空',\n          trigger: 'change'\n        }],\n        comments: [{\n          required: true,\n          message: '请输入面试评价',\n          trigger: 'blur'\n        }]\n      },\n      statusOptions: [{\n        \"label\": \"通过\",\n        \"value\": 2\n      }, {\n        \"label\": \"未通过\",\n        \"value\": 3\n      }]\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByHrId();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    onOpen: function onOpen(row) {\n      this.resultshow = true;\n      this.resultData = row;\n    },\n    onClose: function onClose() {\n      this.$refs['resultForm'].resetFields();\n    },\n    close: function close() {\n      this.resultshow = false;\n    },\n    handelConfirm: function () {\n      var _handelConfirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$refs['resultForm'].validate(function (valid) {\n                  if (!valid) return;\n\n                  _this.close();\n                });\n                _context2.next = 3;\n                return Interview.updateInterviewResult(this.resultData);\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\\u5F55\\u5165\\u6210\\u529F\");\n                  this.getByHrId();\n                  this.close();\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handelConfirm() {\n        return _handelConfirm.apply(this, arguments);\n      }\n\n      return handelConfirm;\n    }(),\n    getByHrId: function () {\n      var _getByHrId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var page, count, applications;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 未处理：state=0\n\n                _context3.next = 4;\n                return Interview.getByHrId(this.$store.getters.user.id, 0, page, count);\n\n              case 4:\n                applications = _context3.sent;\n                this.tableData = applications.items;\n                this.tableData = this.tableData.filter(function (item) {\n                  return item.status !== 0;\n                });\n                this.totalNums = applications.total;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getByHrId() {\n        return _getByHrId.apply(this, arguments);\n      }\n\n      return getByHrId;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(val) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByHrId();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailResumeID = val.resume_id;\n      this.applicationID = val.id;\n      this.applicationState = val.state;\n    },\n    handlePass: function () {\n      var _handlePass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Interview.updateState(val.id, 1);\n\n              case 2:\n                res = _context5.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 刷新页面\n\n                  this.getByHrId();\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handlePass(_x2) {\n        return _handlePass.apply(this, arguments);\n      }\n\n      return handlePass;\n    }(),\n    handleFail: function () {\n      var _handleFail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Application.updateState(val.id, 2);\n\n              case 2:\n                res = _context6.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 刷新页面\n\n                  this.getByHrId();\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleFail(_x3) {\n        return _handleFail.apply(this, arguments);\n      }\n\n      return handleFail;\n    }(),\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.getByHrId();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,SACAA,SADA,QAEA,mBAFA;AAGA;AAEA;EACAC,uBADA;EAEAC;IACAC;EADA,CAFA;EAKAC,IALA,kBAKA;IACA;MACAC,iBADA;MAEAC,oBAFA;MAGAC,iBAHA;MAIAC,aAJA;MAKAC,YALA;MAMAC,cANA;MAOAC,aAPA;MAQAC,uBARA;MASAC,iBATA;MAUAC,gBAVA;MAWAC,mBAXA;MAYAC;QACAC,MADA;QAEAC,UAFA;QAGAC;MAHA,CAZA;MAiBAC;QACAF;UACAG,cADA;UAEAC,mBAFA;UAGAC;QAHA,EADA;QAMAJ;UACAE,cADA;UAEAC,kBAFA;UAGAC;QAHA;MANA,CAjBA;MA6BAC;QACA,aADA;QAEA;MAFA,GAGA;QACA,cADA;QAEA;MAFA,CAHA;IA7BA;EAqCA,CA3CA;EA4CAC,OA5CA;IAAA;MAAA;QAAA;UAAA;YAAA;cA6CA;cACA;cACA;;YA/CA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAiDAC;IACAC,MADA,kBACAC,GADA,EACA;MACA;MACA;IACA,CAJA;IAKAC,OALA,qBAKA;MACA;IACA,CAPA;IAQAC,KARA,mBAQA;MACA;IACA,CAVA;IAWAC,aAXA;MAAA;QAAA;;QAAA;QAAA;UAAA;YAAA;cAAA;gBAYA;kBACA;;kBACA;gBACA,CAHA;gBAZA;gBAAA,OAgBA/B,gDAhBA;;cAAA;gBAgBAgC,GAhBA;;gBAiBA;kBACA;kBACA;kBACA;gBACA;;cArBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAuBAC,SAvBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAwBAC,IAxBA,GAwBA,oBAxBA;gBAyBAC,KAzBA,GAyBA,cAzBA,EA0BA;;gBA1BA;gBAAA,OA2BAnC,gEA3BA;;cAAA;gBA2BAoC,YA3BA;gBA4BA;gBACA;kBACA;gBACA,CAFA;gBAGA;;cAhCA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAkCA;IACAC,mBAnCA;MAAA,wGAmCAC,GAnCA;QAAA;UAAA;YAAA;cAAA;gBAoCA;gBACA;gBACA;gBACA;;cAvCA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAyCAC,YAzCA,wBAyCAD,GAzCA,EAyCA;MACA;MACA;MACA;MACA;IACA,CA9CA;IA+CAE,UA/CA;MAAA,+FA+CAF,GA/CA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAgDAtC,gCAhDA;;cAAA;gBAgDAgC,GAhDA;;gBAiDA;kBACA,8CADA,CAEA;;kBACA;gBACA;;cArDA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAuDAS,UAvDA;MAAA,+FAuDAH,GAvDA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAwDAI,kCAxDA;;cAAA;gBAwDAV,GAxDA;;gBAyDA;kBACA,8CADA,CAEA;;kBACA;gBACA;;cA7DA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IA+DAW,QA/DA,sBA+DA,EA/DA;IAgEAC,WAhEA,yBAgEA;MACA;MACA;IACA;EAnEA;AAjDA","names":["Interview","name","components","ResumeDetail","data","resultshow","dialogVisible","showDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","detailResumeID","applicationID","applicationState","resultData","id","status","comments","rules","required","message","trigger","statusOptions","created","methods","onOpen","row","onClose","close","handelConfirm","res","getByHrId","page","count","applications","handleCurrentChange","val","handleDetail","handlePass","handleFail","Application","rowClick","detailClose"],"sourceRoot":"src/view/interview","sources":["interview-pass.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail\">\n    <div class=\"header\">\n      <div class=\"title\">查看面试名单</div>\n    </div>\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"nickname\" label=\"名字\"></el-table-column>\n      <el-table-column prop=\"tel\" label=\"手机\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"title\" label=\"申请职位\"></el-table-column>\n      <el-table-column label=\"面试状态\">\n        <template slot-scope=\"scope\">\n          <!-- <p v-if=\"scope.row.status == 0\">未开始</p>\n          <p v-if=\"scope.row.status == 1\" :style=\"{ color: 'green' }\">通知面试</p>\n          <p v-if=\"scope.row.status == 2\" :style=\"{ color: 'green' }\">面试通过</p>\n          <p v-if=\"scope.row.status == 3\" :style=\"{ color: 'red' }\">面试未通过</p> -->\n          <el-tag v-if=\"scope.row.status == 0\" type=\"info\">未开始</el-tag>\n          <el-tag v-if=\"scope.row.status == 1\" type=\"success\">通知面试</el-tag>\n          <el-tag v-if=\"scope.row.status == 2\" type=\"success\">面试通过</el-tag>\n          <el-tag v-if=\"scope.row.status == 3\" type=\"danger\">面试未通过</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"400\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" plain round size=\"small\">查看简历</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"success\" round plain size=\"small\"\n            v-if=\"scope.row.status < 2\">\n            录入面试结果</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"info\" round plain size=\"small\" v-else>重新录入结果</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 录入面试结果 -->\n    <div>\n      <el-dialog :visible.sync=\"resultshow\" v-on=\"$listeners\" title=\"录入面试结果\">\n        <el-form ref=\"resultForm\" :model=\"resultData\" :rules=\"rules\" size=\"small\" label-width=\"100px\"\n          label-position=\"left\">\n          <el-form-item label=\"面试结果\" prop=\"status\">\n            <el-radio-group v-model=\"resultData.status\" size=\"small\">\n              <el-radio v-for=\"(item, index) in statusOptions\" :key=\"index\" :label=\"item.value\"\n                :disabled=\"item.disabled\">{{ item.label }}</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"面试评价\" prop=\"comments\">\n            <el-input v-model=\"resultData.comments\" type=\"textarea\" placeholder=\"请输入面试评价\"\n              :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\">\n          <el-button @click=\"close\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handelConfirm\">确定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 简历详情页 -->\n  <resume-detail v-else @detailClose=\"detailClose\" :detailResumeID=\"detailResumeID\" :applicationID=\"applicationID\"\n    :applicationState=\"applicationState\"></resume-detail>\n</template>\n\n<script>\nimport {\n  Interview\n} from '@/model/interview'\nimport ResumeDetail from '@/view/resume/resume-detail'\n\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail\n  },\n  data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      resultData: {\n        id: '',\n        status: '',\n        comments: '',\n      },\n      rules: {\n        status: [{\n          required: true,\n          message: '面试结果不能为空',\n          trigger: 'change'\n        }],\n        comments: [{\n          required: true,\n          message: '请输入面试评价',\n          trigger: 'blur'\n        }],\n      },\n      statusOptions: [{\n        \"label\": \"通过\",\n        \"value\": 2\n      }, {\n        \"label\": \"未通过\",\n        \"value\": 3\n      }],\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    onOpen(row) {\n      this.resultshow = true\n      this.resultData = row\n    },\n    onClose() {\n      this.$refs['resultForm'].resetFields()\n    },\n    close() {\n      this.resultshow = false\n    },\n    async handelConfirm() {\n      this.$refs['resultForm'].validate(valid => {\n        if (!valid) return\n        this.close()\n      })\n      const res = await Interview.updateInterviewResult(this.resultData)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`录入成功`)\n        this.getByHrId()\n        this.close()\n      }\n    },\n    async getByHrId() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 未处理：state=0\n      const applications = await Interview.getByHrId(this.$store.getters.user.id, 0, page,count)\n      this.tableData = applications.items\n      this.tableData = this.tableData.filter((item) => {\n        return item.status !== 0\n      });\n      this.totalNums = applications.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailResumeID = val.resume_id\n      this.applicationID = val.id\n      this.applicationState = val.state\n    },\n    async handlePass(val) {\n      const res = await Interview.updateState(val.id, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    async handleFail(val) {\n      const res = await Application.updateState(val.id, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByHrId()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}