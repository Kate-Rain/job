{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\about\\company.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\about\\company.vue","mtime":1741591998498},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LinSearch from '@/component/base/search/lin-search';\nimport { Company } from '@/model/company';\nimport { Follow } from '@/model/follow';\nimport CompanyDetail from '@/view/company/company-detail';\nexport default {\n  components: {\n    LinSearch: LinSearch,\n    CompanyDetail: CompanyDetail\n  },\n  data: function data() {\n    return {\n      showDetail: false,\n      // 是否显示公司详情页\n      tableData: [],\n      // 表格数据\n      totalNums: 0,\n      // 数据总数\n      currentPage: 1,\n      // 当前页数\n      pageCount: 10,\n      // 每页的数据量\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailCompanyID: 0,\n      // 公司id\n      searchKeyword: '',\n      // 搜索时输入的关键字\n      keyword: null,\n      // 查询关键字,用于显示搜索提示\n      list: {} //关注公司时传入的列表数据\n\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByState();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword: function searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal;\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(newVal);\n        }\n      } else {\n        this.keyword = '';\n        this.$refs.searchKeyword.clear();\n      }\n\n      this.searchCompanyList();\n    }\n  },\n  methods: {\n    getByState: function () {\n      var _getByState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var page, count, companys;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 展示所有审核通过的公司\n\n                _context2.next = 4;\n                return Company.getByState(1, page, count);\n\n              case 4:\n                companys = _context2.sent;\n                this.tableData = companys.items;\n                this.totalNums = companys.total;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByState() {\n        return _getByState.apply(this, arguments);\n      }\n\n      return getByState;\n    }(),\n    // 通过查询关键字分页搜索公司列表 \n    searchCompanyList: function () {\n      var _searchCompanyList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var page, count, companys;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount;\n                _context3.next = 4;\n                return Company.getByKeyword(page, count, this.searchKeyword);\n\n              case 4:\n                companys = _context3.sent;\n                this.tableData = companys.items;\n                this.totalNums = companys.total;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchCompanyList() {\n        return _searchCompanyList.apply(this, arguments);\n      }\n\n      return searchCompanyList;\n    }(),\n    // 清空检索\n    backInit: function () {\n      var _backInit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.searchKeyword = '';\n                this.keyword = '';\n                this.tableData = [];\n                this.loading = true;\n                this.getByState();\n                this.loading = false;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function backInit() {\n        return _backInit.apply(this, arguments);\n      }\n\n      return backInit;\n    }(),\n\n    /**\n     * 监听输入查询关键字\n     */\n    onQueryChange: function () {\n      var _onQueryChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(query) {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.searchKeyword = query.trim();\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onQueryChange(_x) {\n        return _onQueryChange.apply(this, arguments);\n      }\n\n      return onQueryChange;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(val) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByState();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleCurrentChange(_x2) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailCompanyID = val.id;\n    },\n    // 关注公司\n    handleFollow: function () {\n      var _handleFollow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前关注的公司id\n\n                this.list.company_id = val.id; // 调用添加关注的方法\n\n                _context7.next = 4;\n                return Follow.create(this.list);\n\n              case 4:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleFollow(_x3) {\n        return _handleFollow.apply(this, arguments);\n      }\n\n      return handleFollow;\n    }(),\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.getByState();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AAEA;EACAA;IACAC,oBADA;IAEAC;EAFA,CADA;EAKAC,IALA,kBAKA;IACA;MACAC,iBADA;MACA;MACAC,aAFA;MAEA;MACAC,YAHA;MAGA;MACAC,cAJA;MAIA;MACAC,aALA;MAKA;MACAC,uBANA;MAMA;MACAC,kBAPA;MAOA;MACAC,iBARA;MAQA;MACAC,aATA;MASA;MACAC,QAVA,CAUA;;IAVA;EAYA,CAlBA;EAmBAC,OAnBA;IAAA;MAAA;QAAA;UAAA;YAAA;cAoBA;cACA;cACA;;YAtBA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAwBAC;IACA;AACA;AACA;IACAJ,aAJA,yBAIAK,MAJA,EAIA;MACA;QACA;;QACA;UACA;QACA;MACA,CALA,MAKA;QACA;QACA;MACA;;MACA;IACA;EAfA,CAxBA;EAyCAC;IACAC,UADA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEAC,IAFA,GAEA,oBAFA;gBAGAC,KAHA,GAGA,cAHA,EAIA;;gBAJA;gBAAA,OAKAC,kCALA;;cAAA;gBAKAC,QALA;gBAMA;gBACA;;cAPA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IASA;IACAC,iBAVA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAWAJ,IAXA,GAWA,oBAXA;gBAYAC,KAZA,GAYA,cAZA;gBAAA;gBAAA,OAaAC,qDAbA;;cAAA;gBAaAC,QAbA;gBAcA;gBACA;;cAfA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAiBA;IACAE,QAlBA;MAAA;QAAA;UAAA;YAAA;cAAA;gBAmBA;gBACA;gBACA;gBACA;gBACA;gBACA;;cAxBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;;IA0BA;AACA;AACA;IACAC,aA7BA;MAAA,kGA6BAC,KA7BA;QAAA;UAAA;YAAA;cAAA;gBA8BA;;cA9BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAgCA;IACAC,mBAjCA;MAAA,wGAiCAC,GAjCA;QAAA;UAAA;YAAA;cAAA;gBAkCA;gBACA;gBACA;gBACA;;cArCA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAuCAC,YAvCA,wBAuCAD,GAvCA,EAuCA;MACA;MACA;IACA,CA1CA;IA2CA;IACAE,YA5CA;MAAA,iGA4CAF,GA5CA;QAAA;QAAA;UAAA;YAAA;cAAA;gBA6CA;gBACA,gDA9CA,CA+CA;;gBACA,8BAhDA,CAiDA;;gBAjDA;gBAAA,OAkDAG,wBAlDA;;cAAA;gBAkDAC,GAlDA;;gBAmDA;kBACA;gBACA;;cArDA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAuDAC,WAvDA,yBAuDA;MACA;MACA;IACA;EA1DA;AAzCA","names":["components","LinSearch","CompanyDetail","data","showDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","detailCompanyID","searchKeyword","keyword","list","created","watch","newVal","methods","getByState","page","count","Company","companys","searchCompanyList","backInit","onQueryChange","query","handleCurrentChange","val","handleDetail","handleFollow","Follow","res","detailClose"],"sourceRoot":"src/view/about","sources":["company.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail\">\n    <div class=\"header\">\n      <div class=\"title\">蜗牛兼职平台——公司大全</div>\n    </div>\n    <!-- 搜索框 -->\n    <div class=\"box\">\n      <div class=\"left\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入公司名称\" ref=\"searchKeyword\" />\n      </div>\n    </div>\n    <transition name=\"fade\">\n      <div class=\"search\" v-if=\"keyword\">\n        <p class=\"search-tip\">\n          搜索“\n          <span class=\"search-keyword\">{{ keyword }}</span>”, 找到\n          <span class=\"search-num\">{{ totalNums }}</span> 条公司信息\n        </p>\n        <button class=\"search-back\" @click=\"backInit\">返回全部公司</button>\n      </div>\n    </transition>\n    <!-- 公司列表 -->\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"name\" label=\"公司名称\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"logo\" label=\"公司logo\" width=\"250\">\n        <template v-if=\"scope.row.logo\" slot-scope=\"scope\">\n          <el-image :src=\"scope.row.logo\" :preview-src-list=\"imgSrcList\" style=\"max-height: 50px; max-width: 100px;\">\n          </el-image>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"foreign_name\" label=\"公司外文名\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"city\" label=\"总部地点\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"mission\" label=\"公司使命\" width=\"200\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" type=\"primary\" plain size=\"mini\">查看</el-button>\n          <el-button @click.prevent=\"handleFollow(scope.row)\" v-permission=\"{ permission: '新增关注' }\" type=\"success\" plain\n            size=\"mini\">关注公司</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 公司详情 -->\n  <company-detail v-else @detailClose=\"detailClose\" :detailCompanyID=\"detailCompanyID\" :temp=\"1\"></company-detail>\n</template>\n\n<script>\nimport LinSearch from '@/component/base/search/lin-search'\nimport { Company } from '@/model/company'\nimport { Follow } from '@/model/follow'\nimport CompanyDetail from '@/view/company/company-detail'\n\nexport default {\n  components: {\n    LinSearch,\n    CompanyDetail,\n  },\n  data() {\n    return {\n      showDetail: false, // 是否显示公司详情页\n      tableData: [], // 表格数据\n      totalNums: 0, // 数据总数\n      currentPage: 1, // 当前页数\n      pageCount: 10, // 每页的数据量\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailCompanyID: 0, // 公司id\n      searchKeyword: '', // 搜索时输入的关键字\n      keyword: null, // 查询关键字,用于显示搜索提示\n      list: {}, //关注公司时传入的列表数据\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByState()\n    this.loading = false\n  },\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${newVal}`\n        }\n      } else {\n        this.keyword = ''\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchCompanyList()\n    },\n  },\n  methods: {\n    async getByState() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 展示所有审核通过的公司\n      const companys = await Company.getByState(1, page, count)\n      this.tableData = companys.items\n      this.totalNums = companys.total\n    },\n    // 通过查询关键字分页搜索公司列表 \n    async searchCompanyList() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const companys = await Company.getByKeyword(page, count, this.searchKeyword)\n      this.tableData = companys.items\n      this.totalNums = companys.total\n    },\n    // 清空检索\n    async backInit() {\n      this.searchKeyword = ''\n      this.keyword = ''\n      this.tableData = []\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    /**\n     * 监听输入查询关键字\n     */\n    async onQueryChange(query) {\n      this.searchKeyword = query.trim()\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailCompanyID = val.id\n    },\n    // 关注公司\n    async handleFollow(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前关注的公司id\n      this.list.company_id = val.id\n      // 调用添加关注的方法\n      const res = await Follow.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n    detailClose() {\n      this.showDetail = false\n      this.getByState()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 25px;\n      font-weight: 500;\n      margin-left: 450px;\n    }\n  }\n\n  .search {\n    height: 52px;\n    width: 100%;\n    background: rgba(57, 99, 188, 0.1);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-top: 24px;\n    margin-bottom: 24px;\n\n    .search-tip {\n      margin-left: 40px;\n      height: 52px;\n      line-height: 52px;\n      color: #354058;\n      font-size: 14px;\n\n      .search-keyword {\n        color: $theme;\n      }\n\n      .search-num {\n        color: #f4516c;\n      }\n    }\n\n    .search-back {\n      margin: 8px 20px;\n      height: 32px;\n      background: #f4516c;\n      border: none;\n      border-radius: 2px;\n      color: #fff;\n      padding: 0 13px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n  }\n\n  .box {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    margin-bottom: 15px;\n\n    .left {\n      margin-left: 320px;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 30px;\n  }\n}\n</style>\n\n"]}]}