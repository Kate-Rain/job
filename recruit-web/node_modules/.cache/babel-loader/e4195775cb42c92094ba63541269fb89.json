{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue","mtime":1744257014000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HRCompany } from '@/model/hrCompany';\nimport { Company } from '@/model/company';\nimport UploadImgs from '@/component/base/upload-image';\nimport CompanyCreate from '@/view/company/company-create';\nimport { getAll } from 'good-storage';\nexport default {\n  components: {\n    UploadImgs: UploadImgs,\n    CompanyCreate: CompanyCreate\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      maxNum: 1,\n      initData: [],\n      initPosData: [],\n      showCreate: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true;\n              _context.next = 4;\n              return HRCompany.get(this.$store.getters.user.id);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.logo) {\n                _context.next = 9;\n                break;\n              }\n\n              // 还未完成企业认证，会显示企业认证组件\n              this.$message.warning(\"还未完成企业认证,请先完成认证操作之后再继续.\");\n              this.showCreate = true;\n              return _context.abrupt(\"return\");\n\n            case 9:\n              this.initData = [{\n                id: res.id,\n                display: res.logo\n              }];\n              this.form = res;\n              this.loading = false;\n              _context.next = 18;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false; // 还未完成企业认证，会显示企业认证组件\n\n              this.showCreate = true;\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 14]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // 上传图片后，获取服务器返回的URL地址\n    getValue: function () {\n      var _getValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this = this;\n\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // 显示提示框\n                this.$confirm('如需更新公司海报，请在公司logo点击加号可修改公司海报', '提示', {\n                  confirmButtonText: '确定',\n                  cancelButtonText: '取消',\n                  type: 'info',\n                  center: true\n                }).then(function () {\n                  // 用户点击确定后执行获取图片的操作\n                  _this.updateImages();\n                }).catch(function () {// 用户点击取消则不执行任何操作\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getValue() {\n        return _getValue.apply(this, arguments);\n      }\n\n      return getValue;\n    }(),\n    // 实际更新图片的方法\n    updateImages: function () {\n      var _updateImages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var val;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.$refs.uploadEle.getValue();\n\n              case 2:\n                val = _context3.sent;\n\n                if (val && val.length > 0) {\n                  if (val[0]) {\n                    this.form.logo = val[0].display;\n                  }\n\n                  if (val.length > 1 && val[1]) {\n                    this.form.poster = val[1].display;\n                  }\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateImages() {\n        return _updateImages.apply(this, arguments);\n      }\n\n      return updateImages;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.updateImages();\n\n              case 3:\n                if (this.form.logo) {\n                  _context4.next = 6;\n                  break;\n                }\n\n                this.$message.warning('公司logo不能为空');\n                return _context4.abrupt(\"return\");\n\n              case 6:\n                _context4.next = 8;\n                return Company.update(this.form.id, this.form);\n\n              case 8:\n                res = _context4.sent;\n                _context4.next = 11;\n                return Company.updateState(this.form.id, 0);\n\n              case 11:\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 更新成功后刷新表单数据\n\n                  this.refreshFormData();\n                }\n\n                _context4.next = 17;\n                break;\n\n              case 14:\n                _context4.prev = 14;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.$message.error('保存失败，请重试');\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 14]]);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 刷新表单数据\n    refreshFormData: function () {\n      var _refreshFormData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.loading = true;\n                _context5.prev = 1;\n                _context5.next = 4;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 4:\n                result = _context5.sent;\n                this.initData = [{\n                  id: result.id,\n                  display: result.logo\n                }];\n                this.form = result;\n                _context5.next = 12;\n                break;\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](1);\n                console.error('刷新表单数据时出错:', _context5.t0);\n\n              case 12:\n                _context5.prev = 12;\n                this.loading = false;\n                return _context5.finish(12);\n\n              case 15:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 9, 12, 15]]);\n      }));\n\n      function refreshFormData() {\n        return _refreshFormData.apply(this, arguments);\n      }\n\n      return refreshFormData;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields(); // 如果上传组件有reset方法，则重置上传组件状态\n\n      if (this.$refs.uploadEle && this.$refs.uploadEle.reset) {\n        this.$refs.uploadEle.reset();\n      }\n    },\n    createClose: function () {\n      var _createClose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.showCreate = false; // 再次访问接口填充表单数据\n\n                this.loading = true;\n                _context6.next = 4;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 4:\n                res = _context6.sent;\n                this.initData = [{\n                  id: res.id,\n                  display: res.logo\n                }];\n                this.form = res;\n                this.loading = false;\n\n              case 8:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function createClose() {\n        return _createClose.apply(this, arguments);\n      }\n\n      return createClose;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;AACA;AACA;AACA;AACA;AAEA;EACAA;IACAC,sBADA;IAEAC;EAFA,CADA;EAKAC,IALA,kBAKA;IACA;MACAC,cADA;MAEAC,QAFA;MAIAC,SAJA;MAKAC,YALA;MAMAC,eANA;MAOAC;IAPA;EASA,CAfA;EAgBAC,OAhBA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAkBA;cAlBA;cAAA,OAmBAC,0CAnBA;;YAAA;cAmBAC,GAnBA;;cAAA,IAoBAA,QApBA;gBAAA;gBAAA;cAAA;;cAqBA;cACA;cACA;cAvBA;;YAAA;cA0BA,iBACA;gBACAC,UADA;gBAEAC;cAFA,CADA;cAMA;cACA;cAjCA;cAAA;;YAAA;cAAA;cAAA;cAmCA,qBAnCA,CAoCA;;cACA;;YArCA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAwCAC;IACA;IACAC,QAFA;MAAA;QAAA;;QAAA;UAAA;YAAA;cAAA;gBAGA;gBACA;kBACAC,uBADA;kBAEAC,sBAFA;kBAGAC,YAHA;kBAIAC;gBAJA,GAKAC,IALA,CAKA;kBACA;kBACA;gBACA,CARA,EAQAC,KARA,CAQA,aACA;gBACA,CAVA;;cAJA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAiBA;IACAC,YAlBA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OAmBA,+BAnBA;;cAAA;gBAmBAC,GAnBA;;gBAoBA;kBACA;oBACA;kBACA;;kBACA;oBACA;kBACA;gBACA;;cA3BA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IA8BAC,UA9BA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAiCA,mBAjCA;;cAAA;gBAAA,IAkCA,cAlCA;kBAAA;kBAAA;gBAAA;;gBAmCA;gBAnCA;;cAAA;gBAAA;gBAAA,OAsCAC,uCAtCA;;cAAA;gBAsCAd,GAtCA;gBAAA;gBAAA,OAwCAc,oCAxCA;;cAAA;gBAyCA;kBACA,8CADA,CAEA;;kBACA;gBACA;;gBA7CA;gBAAA;;cAAA;gBAAA;gBAAA;gBA+CA;;cA/CA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAmDA;IACAC,eApDA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAqDA;gBArDA;gBAAA;gBAAA,OAuDAhB,0CAvDA;;cAAA;gBAuDAiB,MAvDA;gBAwDA,iBACA;kBACAf,aADA;kBAEAC;gBAFA,CADA;gBAMA;gBA9DA;gBAAA;;cAAA;gBAAA;gBAAA;gBAgEAe;;cAhEA;gBAAA;gBAkEA;gBAlEA;;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAsEA;IACAC,SAvEA,qBAuEAC,QAvEA,EAuEA;MACA,mCADA,CAEA;;MACA;QACA;MACA;IACA,CA7EA;IA+EAC,WA/EA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAgFA,wBAhFA,CAiFA;;gBACA;gBAlFA;gBAAA,OAmFArB,0CAnFA;;cAAA;gBAmFAC,GAnFA;gBAoFA,iBACA;kBACAC,UADA;kBAEAC;gBAFA,CADA;gBAMA;gBACA;;cA3FA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;AAxCA","names":["components","UploadImgs","CompanyCreate","data","loading","form","maxNum","initData","initPosData","showCreate","mounted","HRCompany","res","id","display","methods","getValue","confirmButtonText","cancelButtonText","type","center","then","catch","updateImages","val","submitForm","Company","refreshFormData","result","console","resetForm","formName","createClose"],"sourceRoot":"src/view/company","sources":["company-modify.vue"],"sourcesContent":["<template>\n  <!-- 我的企业信息页面 -->\n  <div class=\"container\" v-if=\"!showCreate\">\n    <div class=\"title\" style=\" text-align: left;\">\n      <span>我的企业信息</span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <!-- 公司名称不设置prop属性，重置的时候就不会重置该字段 -->\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写公司名称\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司外文名\" prop=\"foreign_name\">\n              <el-input size=\"medium\" v-model=\"form.foreign_name\" placeholder=\"请填写公司外文名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"总部地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写公司总部地点\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司logo\" prop=\"logo\">\n              <p>如需更新公司海报,修改第二张图即可</p>\n              <upload-imgs :max-num=\"2\" ref=\"uploadEle\" :value=\"initData\" />\n            </el-form-item>\n            <el-form-item label=\"公司海报\" prop=\"logo\">\n              <span><img :src=\"form.poster\" alt=\"\" class=\"posterImg\" /></span>\n              <span><el-button type=\"primary\" @click=\"getValue\">更 新</el-button></span>\n            </el-form-item>\n            <el-form-item label=\"公司使命\" prop=\"mission\">\n              <el-input size=\"medium\" v-model=\"form.mission\" placeholder=\"请填写使命\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\" prop=\"description\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入公司简介\" v-model=\"form.description\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"认证状态\" prop=\"state\">\n              <!-- <el-switch v-model=\"form.state\"></el-switch> -->\n              <span v-if=\"form.state\" style=\"color:green\">审核通过</span>\n              <span v-else style=\"color:brown\">待审核</span>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n\n  <!-- 企业认证 -->\n  <company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport { HRCompany } from '@/model/hrCompany'\nimport { Company } from '@/model/company'\nimport UploadImgs from '@/component/base/upload-image'\nimport CompanyCreate from '@/view/company/company-create'\nimport { getAll } from 'good-storage'\n\nexport default {\n  components: {\n    UploadImgs,\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      maxNum: 1,\n      initData: [],\n      initPosData: [],\n      showCreate: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      if (!res.logo) {\n        // 还未完成企业认证，会显示企业认证组件\n        this.$message.warning(\"还未完成企业认证,请先完成认证操作之后再继续.\")\n        this.showCreate = true\n        return\n      }\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    // 上传图片后，获取服务器返回的URL地址\n    async getValue() {\n      // 显示提示框\n      this.$confirm('如需更新公司海报，请在公司logo点击加号可修改公司海报', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info',\n        center: true\n      }).then(() => {\n        // 用户点击确定后执行获取图片的操作\n        this.updateImages();\n      }).catch(() => {\n        // 用户点击取消则不执行任何操作\n      });\n    },\n\n    // 实际更新图片的方法\n    async updateImages() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        if (val[0]) {\n          this.form.logo = val[0].display\n        }\n        if (val.length > 1 && val[1]) {\n          this.form.poster = val[1].display\n        }\n      }\n    },\n\n    async submitForm() {\n      try {\n        // 提交表单时直接调用更新图片的方法，不显示提示框\n        await this.updateImages()\n        if (!this.form.logo) {\n          this.$message.warning('公司logo不能为空')\n          return\n        }\n        const res = await Company.update(this.form.id, this.form)\n        // 修改公司状态为待审核，即state=0\n        await Company.updateState(this.form.id, 0)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 更新成功后刷新表单数据\n          this.refreshFormData()\n        }\n      } catch (error) {\n        this.$message.error('保存失败，请重试')\n      }\n    },\n\n    // 刷新表单数据\n    async refreshFormData() {\n      this.loading = true\n      try {\n        const result = await HRCompany.get(this.$store.getters.user.id)\n        this.initData = [\n          {\n            id: result.id,\n            display: result.logo,\n          },\n        ]\n        this.form = result\n      } catch (error) {\n        console.error('刷新表单数据时出错:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n      // 如果上传组件有reset方法，则重置上传组件状态\n      if (this.$refs.uploadEle && this.$refs.uploadEle.reset) {\n        this.$refs.uploadEle.reset()\n      }\n    },\n\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n\n  .posterImg {\n    width: 150px !important;\n  }\n}\n</style>\n"]}]}