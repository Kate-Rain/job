{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\user\\follow.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\user\\follow.vue","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Follow } from '@/model/follow';\nimport LinTable from '@/component/base/table/lin-table';\nimport CompanyDetail from '@/view/company/company-detail';\nexport default {\n  components: {\n    LinTable: LinTable,\n    CompanyDetail: CompanyDetail\n  },\n  data: function data() {\n    return {\n      tableColumn: [{\n        prop: 'name',\n        label: '公司名称'\n      }, {\n        prop: 'foreign_name',\n        label: '公司外文名'\n      }, {\n        prop: 'city',\n        label: '总部地点'\n      }, {\n        prop: 'mission',\n        label: '公司使命'\n      }],\n      tableData: [],\n      operate: [],\n      showEdit: false,\n      detailCompanyID: 0\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              _context.next = 3;\n              return this.getFollowByUserId();\n\n            case 3:\n              this.operate = [{\n                name: '查看',\n                func: 'handleEdit',\n                type: 'primary'\n              }, {\n                name: '取关',\n                func: 'handleDelete',\n                type: 'danger',\n                permission: '取消关注'\n              }];\n              this.loading = false;\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    getFollowByUserId: function () {\n      var _getFollowByUserId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var follows;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return Follow.getFollowByUserId(this.$store.getters.user.id);\n\n              case 3:\n                follows = _context2.sent;\n                this.tableData = follows;\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n\n                if (_context2.t0.code === 22000) {\n                  this.tableData = [];\n                }\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getFollowByUserId() {\n        return _getFollowByUserId.apply(this, arguments);\n      }\n\n      return getFollowByUserId;\n    }(),\n    handleEdit: function handleEdit(val) {\n      console.log('val', val);\n      this.showEdit = true;\n      this.detailCompanyID = val.row.id;\n    },\n    handleDelete: function handleDelete(val) {\n      var _this = this;\n\n      this.$confirm('是否不再关注该公司?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Follow.cancel(_this.$store.getters.user.id, val.row.id);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  _this.getFollowByUserId();\n\n                  _this.$message({\n                    type: 'success',\n                    message: \"\".concat(res.message)\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      })));\n    },\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showEdit = false;\n      this.getFollowByUserId();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AAEA;EACAA;IACAC,kBADA;IAEAC;EAFA,CADA;EAKAC,IALA,kBAKA;IACA;MACAC;QAAAC;QAAAC;MAAA;QAAAD;QAAAC;MAAA;QAAAD;QAAAC;MAAA;QAAAD;QAAAC;MAAA,EADA;MAEAC,aAFA;MAGAC,WAHA;MAIAC,eAJA;MAKAC;IALA;EAOA,CAbA;EAcAC,OAdA;IAAA;MAAA;QAAA;UAAA;YAAA;cAeA;cAfA;cAAA,OAgBA,wBAhBA;;YAAA;cAiBA,gBACA;gBAAAC;gBAAAC;gBAAAC;cAAA,CADA,EAEA;gBACAF,UADA;gBAEAC,oBAFA;gBAGAC,cAHA;gBAIAC;cAJA,CAFA;cASA;;YA1BA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EA4BAC;IACAC,iBADA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA;gBAAA,OAGAC,qDAHA;;cAAA;gBAGAC,OAHA;gBAIA;gBAJA;gBAAA;;cAAA;gBAAA;gBAAA;;gBAMA;kBACA;gBACA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAWAC,UAXA,sBAWAC,GAXA,EAWA;MACAC;MACA;MACA;IACA,CAfA;IAgBAC,YAhBA,wBAgBAF,GAhBA,EAgBA;MAAA;;MACA;QACAG,uBADA;QAEAC,sBAFA;QAGAX;MAHA,GAIAY,IAJA,0EAIA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAAA,OACAR,uDADA;;cAAA;gBACAS,GADA;;gBAEA;kBACA;;kBACA;oBACAb,eADA;oBAEAc;kBAFA;gBAIA;;cARA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA,CAJA;IAcA,CA/BA;IAgCAC,QAhCA,sBAgCA,EAhCA;IAiCAC,WAjCA,yBAiCA;MACA;MACA;IACA;EApCA;AA5BA","names":["components","LinTable","CompanyDetail","data","tableColumn","prop","label","tableData","operate","showEdit","detailCompanyID","created","name","func","type","permission","methods","getFollowByUserId","Follow","follows","handleEdit","val","console","handleDelete","confirmButtonText","cancelButtonText","then","res","message","rowClick","detailClose"],"sourceRoot":"src/view/user","sources":["follow.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- 列表页面 -->\n    <div class=\"container\" v-if=\"!showEdit\">\n      <div class=\"header\">\n        <div class=\"title\" style=\" text-align: left;\">我的关注</div>\n      </div>\n      <!-- 表格 -->\n      <lin-table :tableColumn=\"tableColumn\" :tableData=\"tableData\" :operate=\"operate\" @handleEdit=\"handleEdit\"\n        @handleDelete=\"handleDelete\" @row-click=\"rowClick\" v-loading=\"loading\"></lin-table>\n    </div>\n    <!-- 详情页 -->\n    <company-detail v-else @detailClose=\"detailClose\" :detailCompanyID=\"detailCompanyID\" :flag=\"false\"></company-detail>\n  </div>\n</template>\n\n<script>\nimport { Follow } from '@/model/follow'\nimport LinTable from '@/component/base/table/lin-table'\nimport CompanyDetail from '@/view/company/company-detail'\n\nexport default {\n  components: {\n    LinTable,\n    CompanyDetail,\n  },\n  data() {\n    return {\n      tableColumn: [{ prop: 'name', label: '公司名称' }, { prop: 'foreign_name', label: '公司外文名' }, { prop: 'city', label: '总部地点' }, { prop: 'mission', label: '公司使命' }],\n      tableData: [],\n      operate: [],\n      showEdit: false,\n      detailCompanyID: 0,\n    }\n  },\n  async created() {\n    this.loading = true\n    await this.getFollowByUserId()\n    this.operate = [\n      { name: '查看', func: 'handleEdit', type: 'primary' },\n      {\n        name: '取关',\n        func: 'handleDelete',\n        type: 'danger',\n        permission: '取消关注',\n      },\n    ]\n    this.loading = false\n  },\n  methods: {\n    async getFollowByUserId() {\n      try {\n        const follows = await Follow.getFollowByUserId(this.$store.getters.user.id)\n        this.tableData = follows\n      } catch (error) {\n        if (error.code === 22000) {\n          this.tableData = []\n        }\n      }\n    },\n    handleEdit(val) {\n      console.log('val', val)\n      this.showEdit = true\n      this.detailCompanyID = val.row.id\n    },\n    handleDelete(val) {\n      this.$confirm('是否不再关注该公司?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        const res = await Follow.cancel(this.$store.getters.user.id, val.row.id)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.getFollowByUserId()\n          this.$message({\n            type: 'success',\n            message: `${res.message}`,\n          })\n        }\n      })\n    },\n    rowClick() { },\n    detailClose() {\n      this.showEdit = false\n      this.getFollowByUserId()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}