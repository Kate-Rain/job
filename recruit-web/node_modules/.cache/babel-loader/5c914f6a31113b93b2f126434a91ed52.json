{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\position\\position-create.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\position\\position-create.vue","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CompanyCreate from '@/view/company/company-create';\nimport { HRCompany } from '@/model/hrCompany';\nimport { Category } from '@/model/category';\nimport { Position } from '@/model/position';\nexport default {\n  components: {\n    CompanyCreate: CompanyCreate\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: [],\n      showCreate: false,\n      isdisable: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true; // 先验证是否完成企业认证\n\n              _context.next = 4;\n              return HRCompany.get(this.$store.getters.user.id);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.state !== 1) {\n                this.$message.error(\"未完成企业认证不能发布职位\");\n                this.isdisable = true;\n              } // 没有发生异常，说明已经完成企业认证，给表单的公司名称赋值\n\n\n              this.form.company_name = res.name;\n              this.loading = false;\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0); // 还未完成企业认证，会显示企业认证组件\n\n              this.showCreate = true;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 10]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(formName) {\n        var result, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.loading = true; // 拿到HR对应的Company的id值\n\n                _context2.next = 4;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 4:\n                result = _context2.sent;\n                this.form.company_id = result.id; // 给hr_id赋值\n\n                this.form.hr_id = this.$store.getters.user.id; // 新增职位\n\n                _context2.next = 9;\n                return Position.create(this.form);\n\n              case 9:\n                res = _context2.sent;\n                this.loading = false;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 清空输入框，方便继续添加职位\n\n                  this.resetForm(formName);\n                }\n\n                _context2.next = 18;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.loading = false;\n                console.log(_context2.t0);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n\n      function submitForm(_x) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    queryCategorySearch: function queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      var suggestions = this.categorySuggestions;\n      var results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions;\n      cb(results);\n    },\n    createCategoryFilter: function createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return function (suggestion) {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleCategorySelect: function handleCategorySelect(item) {\n      this.categoryState = item.name; // 给表单的职位分类id赋值\n\n      this.form.category_id = item.id;\n    },\n    loadCategorySuggestions: function () {\n      var _loadCategorySuggestions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.categorySuggestions.length > 0)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return Category.getList();\n\n              case 5:\n                this.categorySuggestions = _context3.sent;\n\n                if (this.categorySuggestions.length === 0) {\n                  this.$message.error('暂无职位分类，请先添加');\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                this.$message.error('获取职位分类失败');\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function loadCategorySuggestions() {\n        return _loadCategorySuggestions.apply(this, arguments);\n      }\n\n      return loadCategorySuggestions;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA,SACAA,SADA,QAEA,mBAFA;AAGA,SACAC,QADA,QAEA,kBAFA;AAGA,SACAC,QADA,QAEA,kBAFA;AAIA;EACAC;IACAC;EADA,CADA;EAIAC,IAJA,kBAIA;IACA;MACAC,cADA;MAEAC,QAFA;MAGAC,iBAHA;MAIAC,uBAJA;MAKAC,iBALA;MAMAC;IANA;EAQA,CAbA;EAcAC,OAdA;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAgBA,oBAhBA,CAiBA;;cAjBA;cAAA,OAkBAZ,0CAlBA;;YAAA;cAkBAa,GAlBA;;cAmBA;gBACA;gBACA;cACA,CAtBA,CAuBA;;;cACA;cACA;cAzBA;cAAA;;YAAA;cAAA;cAAA;cA2BA;cACAC,yBA5BA,CA6BA;;cACA;;YA9BA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;;IAAA;MAAA;IAAA;;IAAA;EAAA;EAiCAC;IACAC,UADA;MAAA,+FACAC,QADA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAGA,oBAHA,CAIA;;gBAJA;gBAAA,OAKAjB,0CALA;;cAAA;gBAKAkB,MALA;gBAMA,iCANA,CAOA;;gBACA,8CARA,CASA;;gBATA;gBAAA,OAUAhB,0BAVA;;cAAA;gBAUAW,GAVA;gBAWA;;gBACA;kBACA,8CADA,CAEA;;kBACA;gBACA;;gBAhBA;gBAAA;;cAAA;gBAAA;gBAAA;gBAkBA;gBACAC;;cAnBA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;IAsBA;IACAK,SAvBA,qBAuBAF,QAvBA,EAuBA;MACA;IACA,CAzBA;IA0BAG,mBA1BA,+BA0BAC,WA1BA,EA0BAC,EA1BA,EA0BA;MACA;MACA;MACA;MACAA;IACA,CA/BA;IAgCAC,oBAhCA,gCAgCAF,WAhCA,EAgCA;MACA;MACA;QACA;MACA,CAFA;IAGA,CArCA;IAsCAG,oBAtCA,gCAsCAC,IAtCA,EAsCA;MACA,+BADA,CAEA;;MACA;IACA,CA1CA;IA2CAC,uBA3CA;MAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,MA4CA,mCA5CA;kBAAA;kBAAA;gBAAA;;gBAAA;;cAAA;gBAAA;gBAAA;gBAAA,OAgDAzB,kBAhDA;;cAAA;gBAgDA,wBAhDA;;gBAiDA;kBACA;gBACA;;gBAnDA;gBAAA;;cAAA;gBAAA;gBAAA;gBAqDA;gBACAa;;cAtDA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;AAjCA","names":["HRCompany","Category","Position","components","CompanyCreate","data","loading","form","categoryState","categorySuggestions","showCreate","isdisable","mounted","res","console","methods","submitForm","formName","result","resetForm","queryCategorySearch","queryString","cb","createCategoryFilter","handleCategorySelect","item","loadCategorySuggestions"],"sourceRoot":"src/view/position","sources":["position-create.vue"],"sourcesContent":["<template>\n\t<!-- 发布职位页面 -->\n\t<div class=\"container\" v-if=\"!showCreate\">\n\t\t<div class=\"title\">\n\t\t\t<span>新增职位</span>\n\t\t</div>\n\t\t<el-divider></el-divider>\n\t\t<div class=\"wrap\">\n\t\t\t<el-row>\n\t\t\t\t<el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n\t\t\t\t\t<el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n\t\t\t\t\t\t<el-form-item label=\"职位名称\" prop=\"title\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.title\" placeholder=\"请填写职位名称\"></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位分类\" prop=\"category_id\">\n\t\t\t\t\t\t\t<el-autocomplete @focus=\"loadCategorySuggestions\" popper-class=\"my-autocomplete\" class=\"inline-input\"\n\t\t\t\t\t\t\t\tv-model=\"categoryState\" :fetch-suggestions=\"queryCategorySearch\" placeholder=\"请填写职位所属分类\" @select=\"handleCategorySelect\">\n\t\t\t\t\t\t\t\t<template slot-scope=\"{ item }\">\n\t\t\t\t\t\t\t\t\t<span class=\"id\">{{ item.id }}</span>\n\t\t\t\t\t\t\t\t\t<span class=\"name\">{{ item.name }}</span>\n\t\t\t\t\t\t\t\t</template>\n\t\t\t\t\t\t\t</el-autocomplete>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"招聘人数\" prop=\"quantity\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.quantity\" placeholder=\"请填写职位招聘人数\"></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"薪资\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.salary_down\" style=\"float: left;width: 20%\" placeholder=\"请填写最低薪资\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t\t<span style=\"float: left;\">~</span>\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.salary_up\" style=\"float: left;width: 20%\" placeholder=\"请填写最高薪资\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"工作地点\" prop=\"city\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写工作地点\"/>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"学历要求\" prop=\"edu_back\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.edu_back\" placeholder=\"请填写学历要求\"/>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"职位要求\" prop=\"requirement\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.requirement\" placeholder=\"请填写职位要求\">\n\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item label=\"公司名称\">\n\t\t\t\t\t\t\t<el-input size=\"medium\" v-model=\"form.company_name\" disabled></el-input>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t<el-form-item class=\"submit\">\n\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"submitForm('form')\" :disabled=\"isdisable\">保 存</el-button>\n\t\t\t\t\t\t\t<el-button @click=\"resetForm('form')\">重 置</el-button>\n\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t</el-form>\n\t\t\t\t</el-col>\n\t\t\t</el-row>\n\t\t</div>\t\n\t</div>\n\n<!-- 企业认证 -->\n<company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport CompanyCreate from '@/view/company/company-create'\nimport {\n  HRCompany\n} from '@/model/hrCompany'\nimport {\n  Category\n} from '@/model/category'\nimport {\n  Position\n} from '@/model/position'\n\nexport default {\n  components: {\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: [],\n      showCreate: false,\n      isdisable: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      // 先验证是否完成企业认证\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      if (res.state !== 1) {\n        this.$message.error(\"未完成企业认证不能发布职位\");\n        this.isdisable = true\n      }\n      // 没有发生异常，说明已经完成企业认证，给表单的公司名称赋值\n      this.form.company_name = res.name\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    async submitForm(formName) {\n      try {\n        this.loading = true\n        // 拿到HR对应的Company的id值\n        const result = await HRCompany.get(this.$store.getters.user.id)\n        this.form.company_id = result.id\n        // 给hr_id赋值\n        this.form.hr_id = this.$store.getters.user.id\n        // 新增职位\n        const res = await Position.create(this.form)\n        this.loading = false\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 清空输入框，方便继续添加职位\n          this.resetForm(formName)\n        }\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>\n"]}]}