{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue","mtime":1745597182000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\babel.config.js","mtime":1755596402905},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715100000}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import WorkListVue from \"./WorkList.vue\";\nimport Work from \"./Work.vue\";\nimport { Position } from '@/model/position';\nimport Button from \"../../plugin/lin-cms-ui/view/basic/button/button.vue\";\nimport LinSearch from '@/component/base/search/lin-search';\nimport PositionDetail from '@/view/position/position-detail';\nimport { Category } from '@/model/category';\nimport Nav from '@/component/index/Nav.vue';\nexport default {\n  components: {\n    // WorkListVue,\n    Button: Button,\n    LinSearch: LinSearch,\n    PositionDetail: PositionDetail,\n    Work: Work,\n    Nav: Nav\n  },\n  data: function data() {\n    return _defineProperty({\n      worklist: [],\n      recommendList: [],\n      // sWidth:this.nxw,\n      list: this.slist,\n      showDetail: false,\n      // 是否显示职位详情页\n      showHot: false,\n      // 是否显示热招职位列表\n      tableData: [],\n      // 表格数据\n      totalNums: 0,\n      // 数据总数\n      currentPage: 1,\n      // 当前页数\n      pageCount: 12,\n      // 每页的数据量\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailPositionID: 0,\n      // 职位id\n      searchKeyword: '',\n      // 搜索时输入的关键字\n      keyword: null,\n      // 查询关键字,用于显示搜索提示\n      form: {}\n    }, \"list\", {});\n  },\n  props: ['nxw', 'slist', 'searchValue'],\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var res;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (this.keywordValue) {\n                this.keyword = this.keywordValue;\n              }\n\n              this.searchPositionList(this.keyword);\n              _context.next = 4;\n              return Category.getList();\n\n            case 4:\n              res = _context.sent;\n              this.recommendList = this.getShufflePos(res).splice(0, 6);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  // watch: {\n  // \t/**\n  // \t * 关键字搜索\n  // \t */\n  // \tsearchKeyword(newVal) {\n  // \t\tif (newVal) {\n  // \t\t\tthis.keyword = newVal\n  // \t\t\tif (this.searchUser) {\n  // \t\t\t\tthis.keyword = `${newVal}`\n  // \t\t\t}\n  // \t\t} else {\n  // \t\t\tthis.keyword = ''\n  // \t\t\tthis.$refs.searchKeyword.clear()\n  // \t\t}\n  // \t\tthis.searchPositionList()\n  // \t},\n  // },\n  methods: {\n    // 使用shuffle算法获取随机的职位推荐顺序\n    getShufflePos: function getShufflePos(array) {\n      var res = [],\n          random;\n\n      while (array.length > 0) {\n        random = Math.floor(Math.random() * array.length);\n        res.push(array[random]);\n        array.splice(random, 1);\n      }\n\n      return res;\n    },\n    getByState: function () {\n      var _getByState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var page, count, positions;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 首页展示所有审核通过的职位\n\n                _context2.next = 4;\n                return Position.getByState(1, page, count);\n\n              case 4:\n                positions = _context2.sent;\n                this.tableData = positions.items;\n                this.totalNums = positions.total;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByState() {\n        return _getByState.apply(this, arguments);\n      }\n\n      return getByState;\n    }(),\n    // 通过查询关键字分页搜索职位列表 \n    searchPositionList: function () {\n      var _searchPositionList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var searchKeyword,\n            page,\n            count,\n            positions,\n            _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                searchKeyword = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : null;\n                searchKeyword = searchKeyword == null ? \"\" : searchKeyword; // 避免参数为null\n                // this.searchKeyword = searchKeyword;\n\n                page = this.currentPage - 1;\n                count = this.pageCount;\n                _context3.next = 6;\n                return Position.getByKeyword(page, count, searchKeyword);\n\n              case 6:\n                positions = _context3.sent;\n                // 获取职位数据,(顺序随机)\n                // 存储\n                this.tableData = this.getShufflePos(positions.items);\n                this.totalNums = positions.total; // 清空检索\n\n                this.searchKeyword = '';\n\n                if (!(this.totalNums == 0)) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                this.$message.warning(\"当前职位没有新的招聘.\");\n                this.searchPositionList();\n                return _context3.abrupt(\"return\");\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchPositionList() {\n        return _searchPositionList.apply(this, arguments);\n      }\n\n      return searchPositionList;\n    }(),\n    // 清空检索\n    backInit: function () {\n      var _backInit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.searchKeyword = '';\n                this.keyword = '';\n                this.tableData = [];\n                this.loading = true;\n                this.searchPositionList();\n                this.loading = false;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function backInit() {\n        return _backInit.apply(this, arguments);\n      }\n\n      return backInit;\n    }(),\n\n    /**\n     * 监听输入查询关键字\n     */\n    onQueryChange: function () {\n      var _onQueryChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.searchKeyword = this.searchKeyword.trim();\n                this.searchPositionList(this.searchKeyword);\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onQueryChange() {\n        return _onQueryChange.apply(this, arguments);\n      }\n\n      return onQueryChange;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(val) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.searchPositionList();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailPositionID = val.id;\n    },\n    handleHot: function handleHot() {\n      this.showHot = true;\n    },\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.searchPositionList();\n    },\n    hotClose: function hotClose() {\n      this.showHot = false;\n      this.showDetail = false;\n      this.searchPositionList();\n    },\n    // 投递简历\n    handleDelivery: function () {\n      var _handleDelivery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(val) {\n        var flag, temp, result, res;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id);\n\n              case 2:\n                flag = _context7.sent;\n\n                if (!(flag === false)) {\n                  _context7.next = 7;\n                  break;\n                }\n\n                // 不能重复投递\n                this.$message.error(\"你已投递过该职位，不可重复投递\");\n                _context7.next = 25;\n                break;\n\n              case 7:\n                if (this.$store.getters.user.id) {\n                  _context7.next = 9;\n                  break;\n                }\n\n                return _context7.abrupt(\"return\");\n\n              case 9:\n                // 获取当前登录求职者的用户id\n                this.form.user_id = this.$store.getters.user.id; // 获取当前投递简历的职位id\n\n                this.form.position_id = val.id; // 根据用户id查询绑定的简历id\n\n                _context7.next = 13;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 13:\n                temp = _context7.sent;\n                this.form.resume_id = temp.resume_id;\n                console.log(temp); // 根据职位id查询该职位所对应的hr_id\n\n                _context7.next = 18;\n                return Position.getById(val.id);\n\n              case 18:\n                result = _context7.sent;\n                this.form.hr_id = result.hr_id;\n                this.form.company_id = val.company_id; // 调用创建申请的方法\n\n                _context7.next = 23;\n                return Application.create(this.form);\n\n              case 23:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 25:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleDelivery(_x2) {\n        return _handleDelivery.apply(this, arguments);\n      }\n\n      return handleDelivery;\n    }(),\n    // 收藏职位\n    handleCollect: function () {\n      var _handleCollect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(val) {\n        var res;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前收藏的职位id\n\n                this.list.position_id = val.id; // 调用添加收藏的方法\n\n                _context8.next = 4;\n                return Favor.create(this.list);\n\n              case 4:\n                res = _context8.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 6:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function handleCollect(_x3) {\n        return _handleCollect.apply(this, arguments);\n      }\n\n      return handleCollect;\n    }()\n  }\n};",{"version":3,"mappings":"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","names":["Position","components","Button","LinSearch","PositionDetail","Work","Nav","data","worklist","recommendList","list","showDetail","showHot","tableData","totalNums","currentPage","pageCount","refreshPagination","detailPositionID","searchKeyword","keyword","form","props","mounted","Category","res","methods","getShufflePos","array","random","getByState","page","count","positions","searchPositionList","backInit","onQueryChange","handleCurrentChange","val","handleDetail","handleHot","rowClick","detailClose","hotClose","handleDelivery","Application","flag","Resume","temp","console","result","handleCollect","Favor"],"sourceRoot":"src/component/index","sources":["Search.vue"],"sourcesContent":["<!-- 首页搜素框模块 -->\n<template>\n\t<div>\n\t\t<div style=\"margin-left:20% ; text-align: center\">\n\t\t\t<position-detail v-if=\"showDetail\" @detailClose=\"detailClose\" :detailPositionID=\"detailPositionID\" :temp=\"1\">\n\t\t\t</position-detail>\n\t\t</div>\n\t\t<div class=\"searchIndex\" v-if=\"!showDetail\">\n\t\t\t<div class=\"contains\" :width=\"nxw\">\n\t\t\t\t<div class=\"search\">\n\t\t\t\t\t<div style=\"width: 70%;margin: 0 auto; text-align: center\">\n\t\t\t\t\t\t<el-row span=\"10\">\n\t\t\t\t\t\t\t<el-col>\n\t\t\t\t\t\t\t\t<el-input v-model=\"searchKeyword\" @change=\"onQueryChange\" placeholder=\"请输入职位名称(回车搜索)\" size=\"large\" clearable>\n\t\t\t\t\t\t\t\t\t<el-button @click=\"onQueryChange\" slot=\"append\" icon=\"el-icon-search\">查询所有职位</el-button>\n\t\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t</el-row>\n\t\t\t\t\t</div>\n\t\t\t\t\t\n\t\t\t\t\t<!-- 展示热门职位搜索列表 -->\n\t\t\t\t\t<div class=\"s_hot\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t热门职位搜索：\n\t\t\t\t\t\t\t<span class=\"s_hot_like\" v-if=\"recommendList.length\">\n\t\t\t\t\t\t\t\t<span @click=\"searchPositionList()\">\n\t\t\t\t\t\t\t\t\t全部<span class=\"hot_before\"></span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span @click=\"searchPositionList(item.key_word)\" v-for=\"(item,index) in recommendList\" :key=\"index\" :title=\"item.description\">\n\t\t\t\t\t\t\t\t\t{{item.name}}\n\t\t\t\t\t\t\t\t\t<span class=\"hot_before\"></span>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t<span class=\"s_hot_like\" v-else>\n\t\t\t\t\t\t\t\t<span>无法获取职位数据<span class=\"hot_before\"></span></span>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t\n\t\t\t\t\t<div class=\"nav-box\">\n\t\t\t\t\t\t<!-- 轮播图 -->\n\t\t\t\t\t\t<Nav></Nav>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<template v-if=\"!showDetail\">\n\t\t\t\t\t<div class=\"workList\">\n\t\t\t\t\t\t<ul class=\"work_list\">\n\t\t\t\t\t\t\t<Work :work=\"tableData\"/>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"pagination\" v-if=\"!showDetail\">\n\t\t\t<el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n\t\t\t\t:current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n\t\t\t</el-pagination>\n\t\t</div>\n\t</div>\n\t<!-- 职位详情 -->\n</template>\n\n<script>\n// import WorkListVue from \"./WorkList.vue\";\nimport Work from \"./Work.vue\";\nimport {\n\tPosition\n} from '@/model/position'\nimport Button from \"../../plugin/lin-cms-ui/view/basic/button/button.vue\";\nimport LinSearch from '@/component/base/search/lin-search'\nimport PositionDetail from '@/view/position/position-detail'\n\nimport {  Category } from '@/model/category'\nimport Nav from '@/component/index/Nav.vue'\nexport default {\n\tcomponents: {\n\t\t// WorkListVue,\n\t\tButton,\n\t\tLinSearch,\n\t\tPositionDetail,\n\t\tWork,\n\t\tNav,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tworklist: [],\n\t\t\trecommendList:[],\n\t\t\t// sWidth:this.nxw,\n\t\t\tlist: this.slist,\n\t\t\tshowDetail: false, // 是否显示职位详情页\n\t\t\tshowHot: false, // 是否显示热招职位列表\n\t\t\ttableData: [], // 表格数据\n\t\t\ttotalNums: 0, // 数据总数\n\t\t\tcurrentPage: 1, // 当前页数\n\t\t\tpageCount: 12, // 每页的数据量\n\t\t\trefreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n\t\t\tdetailPositionID: 0, // 职位id\n\t\t\tsearchKeyword: '', // 搜索时输入的关键字\n\t\t\tkeyword: null, // 查询关键字,用于显示搜索提示\n\t\t\tform: {}, //投递简历时传入的列表数据\n\t\t\tlist: {} //收藏职位时传入的列表数据\n\t\t}\n\t},\n\tprops: ['nxw', 'slist', 'searchValue'],\n \tasync mounted() {\n\t\tif (this.keywordValue) {\n\t\t\tthis.keyword = this.keywordValue;\n\t\t}\n\t\tthis.searchPositionList(this.keyword)\n\t\t\n\t\tvar res = await Category.getList()\n\t\tthis.recommendList = this.getShufflePos(res).splice(0,6);\n\t},\n\t// watch: {\n\t// \t/**\n\t// \t * 关键字搜索\n\t// \t */\n\t// \tsearchKeyword(newVal) {\n\t// \t\tif (newVal) {\n\t// \t\t\tthis.keyword = newVal\n\t// \t\t\tif (this.searchUser) {\n\t// \t\t\t\tthis.keyword = `${newVal}`\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tthis.keyword = ''\n\t// \t\t\tthis.$refs.searchKeyword.clear()\n\t// \t\t}\n\t// \t\tthis.searchPositionList()\n\t// \t},\n\t// },\n\tmethods: {\n\t\t// 使用shuffle算法获取随机的职位推荐顺序\n\t\tgetShufflePos(array){\n\t\t\tlet res = [],random;\n\t\t\twhile(array.length>0){\n\t\t\t\trandom = Math.floor(Math.random() * array.length);\n\t\t\t\tres.push(array[random]);\n\t\t\t\tarray.splice(random,1);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\tasync getByState() {\n\t\t\tconst page = this.currentPage - 1;\n\t\t\tconst count = this.pageCount;\n\t\t\t// 首页展示所有审核通过的职位\n\t\t\tconst positions = await Position.getByState(1, page, count);\n\t\t\tthis.tableData = positions.items;\n\t\t\tthis.totalNums = positions.total;\n\t\t},\n\t\t// 通过查询关键字分页搜索职位列表 \n\t\tasync searchPositionList(searchKeyword=null) {\n\t\t\tsearchKeyword = searchKeyword == null ? \"\" : searchKeyword; // 避免参数为null\n\t\t\t// this.searchKeyword = searchKeyword;\n\t\t\tconst page = this.currentPage - 1;\n\t\t\tconst count = this.pageCount;\n\t\t\tconst positions = await Position.getByKeyword(page, count, searchKeyword);\n\t\t\t// 获取职位数据,(顺序随机)\n\t\t\t// 存储\n\t\t\tthis.tableData =  this.getShufflePos(positions.items)\n\t\t\tthis.totalNums = positions.total;\n\t\t\t// 清空检索\n\t\t\tthis.searchKeyword = '';\n\t\t\tif(this.totalNums==0){\n\t\t\t\tthis.$message.warning(\"当前职位没有新的招聘.\");\n\t\t\t\tthis.searchPositionList();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// this.$message.success(\"查询职位成功\")\n\t\t},\n\t\t// 清空检索\n\t\tasync backInit() {\n\t\t\tthis.searchKeyword = '';\n\t\t\tthis.keyword = '';\n\t\t\tthis.tableData = [];\n\t\t\tthis.loading = true;\n\t\t\tthis.searchPositionList();\n\t\t\tthis.loading = false;\n\t\t},\n\t\t/**\n\t\t * 监听输入查询关键字\n\t\t */\n\t\tasync onQueryChange() {\n\t\t\tthis.searchKeyword = this.searchKeyword.trim();\n\t\t\tthis.searchPositionList(this.searchKeyword);\n\t\t},\n\t\t// 切换table页\n\t\tasync handleCurrentChange(val) {\n\t\t\tthis.currentPage = val;\n\t\t\tthis.loading = true;\n\t\t\tthis.searchPositionList();\n\t\t\tthis.loading = false;\n\t\t},\n\t\thandleDetail(val) {\n\t\t\tthis.showDetail = true;\n\t\t\tthis.detailPositionID = val.id;\n\t\t},\n\t\thandleHot() {\n\t\t\tthis.showHot = true;\n\t\t},\n\t\trowClick() { },\n\t\tdetailClose() {\n\t\t\tthis.showDetail = false;\n\t\t\tthis.searchPositionList();\n\t\t},\n\t\thotClose() {\n\t\t\tthis.showHot = false\n\t\t\tthis.showDetail = false\n\t\t\tthis.searchPositionList()\n\t\t},\n\t\t// 投递简历\n\t\tasync handleDelivery(val) {\n\t\t\t// 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n\t\t\tconst flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n\t\t\tif (flag === false) {\n\t\t\t\t// 不能重复投递\n\t\t\t\tthis.$message.error(\"你已投递过该职位，不可重复投递\")\n\t\t\t} else {\n\t\t\t\tif (!this.$store.getters.user.id) return;\n\t\t\t\t// 获取当前登录求职者的用户id\n\t\t\t\tthis.form.user_id = this.$store.getters.user.id\n\t\t\t\t// 获取当前投递简历的职位id\n\t\t\t\tthis.form.position_id = val.id\n\t\t\t\t// 根据用户id查询绑定的简历id\n\t\t\t\tconst temp = await Resume.getByUserId(this.$store.getters.user.id)\n\t\t\t\tthis.form.resume_id = temp.resume_id\n\t\t\t\tconsole.log(temp)\n\t\t\t\t// 根据职位id查询该职位所对应的hr_id\n\t\t\t\tconst result = await Position.getById(val.id)\n\t\t\t\tthis.form.hr_id = result.hr_id\n\t\t\t\tthis.form.company_id = val.company_id\n\t\t\t\t// 调用创建申请的方法\n\t\t\t\tconst res = await Application.create(this.form)\n\t\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// 收藏职位\n\t\tasync handleCollect(val) {\n\t\t\t// 获取当前登录求职者的用户id\n\t\t\tthis.list.user_id = this.$store.getters.user.id\n\t\t\t// 获取当前收藏的职位id\n\t\t\tthis.list.position_id = val.id\n\t\t\t// 调用添加收藏的方法\n\t\t\tconst res = await Favor.create(this.list)\n\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t}\n\t\t},\n\t}\n}\n</script>\n\n<style lang=\"scss\">\n.searchIndex {\n\twidth: 100%;\n\tbackground: #fff;\n\tmargin-top: 20px;\n\t.contains {\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\n\t\t.search {\n\t\t\t// width: 50rem;\n\t\t\t// height: 10rem;\n\t\t\t// margin: 0 auto;\n\t\t\ttext-align: center;\n\t\t\tposition: relative;\n\n\t\t\t.nav-box {\n\t\t\t\twidth: 1200px;\n\t\t\t\tmargin: 0 auto; \n\t\t\t\ttext-align: center\n\t\t\t}\n\t\t\t// img {\n\t\t\t// \tdisplay: inline-block;\n\t\t\t// \twidth: 150px;\n\t\t\t// }\n\t\t\t.search1 {\n\t\t\t\twidth: initial;\n\t\t\t\tmargin: center;\n\t\t\t\ttext-align: center;\n\t\t\t\tposition: relative;\n\t\t\t}\n\n\t\t\t.s_box {\n\t\t\t\theight: 5rem;\n\t\t\t\tpadding-top: 2rem;\n\n\t\t\t\t.search_input,\n\t\t\t\t.search_button {\n\t\t\t\t\tfloat: left;\n\t\t\t\t\tbox-sizing: content-box;\n\t\t\t\t\twidth: 39.5rem;\n\t\t\t\t\tborder: 1px solid #ddd;\n\n\t\t\t\t\t// margin-top: 20px;\n\t\t\t\t\t&:focus {\n\t\t\t\t\t\toutline: 0px;\n\t\t\t\t\t\toutline-offset: 0px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.search_input {\n\t\t\t\t\theight: 19px;\n\t\t\t\t\tpadding: 16px;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tborder-right: none;\n\n\t\t\t\t\t&:focus {\n\t\t\t\t\t\tborder: 1px solid #3CBEF9;\n\t\t\t\t\t\tborder-right: 0px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.search_button {\n\t\t\t\t\twidth: 8rem;\n\t\t\t\t\theight: 51px;\n\t\t\t\t\tfont-size: 20px;\n\t\t\t\t\tline-height: 51px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tborder: 1px solid #3CBEF9;\n\t\t\t\t\tbackground: #3CBEF9;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.s_hot {\n\t\t\t\tclear: both;\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin-top: 20px;\n\t\t\t\tcolor: #666;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tdiv {\n\t\t\t\t\theight: 25px;\n\t\t\t\t}\n\n\t\t\t\t.s_hot_like {\n\t\t\t\t\tmargin-right: 16px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\theight: 100%;\n\t\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t\t>span {\n\t\t\t\t\t\tmargin: 0 5px;\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tfont-family: cursive;\n\t\t\t\t\t\tposition: relative;\n\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\ttransition: all .5s !important;\n\t\t\t\t\t\tpadding: 2px;\n\t\t\t\t\t\theight: 100%;\n\t\t\t\t\t\tline-height: 25px;\n    \t\t\t\t\ttransform: translateY(5px);\n\t\t\t\t\t\t// text-shadow: 0px 1px 3px #000000 !important;\n\t\t\t\t\t\tcolor: #6c6c6c !important;\n\t\t\t\t\t\t&:hover {\n    \t\t\t\t\t\ttransform: translateY(0px);\n\n\t\t\t\t\t\t\t.hot_before {\n\t\t\t\t\t\t\t\tbackground: #3636361f;\n\t\t\t\t\t\t\t\tleft: 0% !important;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t.hot_before {\n\t\t\t\t\t\tposition: absolute;\n\t\t\t\t\t\tleft: -100% !important;\n\t\t\t\t\t\twidth: 100%;\n\t\t\t\t\t\theight: 80%;\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\ttransition: all .8s;\n\t\t\t\t\t\tpadding-bottom: 2px;\n\t\t\t\t\t\tborder-top: 1px solid #3affad;\n\t\t\t\t\t\tborder-bottom: 1px solid #3CBEF9;\n\t\t\t\t\t\tcolor: #3CBEF9 !important;\n\t\t\t\t\t}\n\t\t\t\t\t// >span:hover  .hot_before{\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.nosee {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n\n.container {\n\tpadding: 0 30px;\n\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\n\t\t.title {\n\t\t\theight: 59px;\n\t\t\tline-height: 59px;\n\t\t\tcolor: $parent-title-color;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: 500;\n\t\t\tmargin-left: 450px;\n\t\t}\n\t}\n\n\t.search3 {\n\t\theight: 52px;\n\t\twidth: 100%;\n\t\tbackground: rgba(57, 99, 188, 0.1);\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\tmargin-top: 24px;\n\t\tmargin-bottom: 24px;\n\n\t\t.search-tip {\n\t\t\tmargin-left: 40px;\n\t\t\theight: 52px;\n\t\t\tline-height: 52px;\n\t\t\tcolor: #354058;\n\t\t\tfont-size: 14px;\n\n\t\t\t.search-keyword {\n\t\t\t\tcolor: $theme;\n\t\t\t}\n\n\t\t\t.search-num {\n\t\t\t\tcolor: #f4516c;\n\t\t\t}\n\t\t}\n\n\t\t.search-back {\n\t\t\tmargin: 8px 20px;\n\t\t\theight: 32px;\n\t\t\tbackground: #f4516c;\n\t\t\tborder: none;\n\t\t\tborder-radius: 2px;\n\t\t\tcolor: #fff;\n\t\t\tpadding: 0 13px;\n\t\t\tfont-size: 14px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t.box {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\n\t\t.left {\n\t\t\tmargin-left: 280px;\n\t\t}\n\n\t\t.right {\n\t\t\theight: 59px;\n\t\t\tline-height: 59px;\n\t\t\tcolor: $right-side-font-color;\n\t\t\tfont-size: 18px;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-left: 50px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t.pagination {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin: 30px;\n\t}\n}\n\n$nx-color2:#0470B8;\n$nx-width:76rem;\n\n.workList {\n\twidth: 100%;\n\tcursor: pointer;\n\n\t.work_list {\n\t\twidth: $nx-width;\n\t\tmargin: 1rem auto;\n\t\tzoom: 1;\n\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t\tcontent: '.';\n\t\t\tclear: both;\n\t\t\tline-height: 0;\n\t\t\tvisibility: hidden;\n\t\t}\n\n\t\t.cardWork {\n\t\t\tfloat: left;\n\t\t\twidth: 17.6rem;\n\t\t\theight: 16.75rem;\n\t\t\tborder: 1px solid #eee;\n\t\t\tmargin: 1rem 1rem 0 0;\n\n\t\t\t>div {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tpadding: 1rem;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-align: center;\n\n\t\t\t\t.cardWork_Up {\n\t\t\t\t\tcolor: #999;\n\n\t\t\t\t\t.card_workNT {\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tfont-weight: 400;\n\n\t\t\t\t\t\t.card_workName {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tmax-width: 12rem;\n\t\t\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\t\twhite-space: nowrap;\n\n\t\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\t\tcolor: $nx-color2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.card_workTime {\n\t\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.card_workMoney {\n\t\t\t\t\t\tfloat: right;\n\t\t\t\t\t\tcolor: #FA606B;\n\t\t\t\t\t}\n\n\t\t\t\t\t.card_workExp {\n\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\tcolor: #888;\n\t\t\t\t\t}\n\n\t\t\t\t\tul {\n\t\t\t\t\t\theight: 4rem;\n\t\t\t\t\t\tborder-bottom: 1px dashed #ddd;\n\n\t\t\t\t\t\t.card_workTags {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tfont-size: 0.6rem;\n\t\t\t\t\t\t\tborder: 1px solid #eee;\n\t\t\t\t\t\t\tpadding: 0.2rem 0.3rem;\n\t\t\t\t\t\t\tmargin: 0.6rem 0.6rem 2rem 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.cardWork_Down {\n\t\t\t\t\tfloat: left;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 2.5rem;\n\t\t\t\t\tmargin-top: 0.5rem;\n\n\t\t\t\t\t.card_workImg img {\n\t\t\t\t\t\twidth: 6rem;\n\t\t\t\t\t\tmargin-right: 1rem;\n\t\t\t\t\t}\n\n\t\t\t\t\tdiv {\n\t\t\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tul .card_workIncTags {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\t\tcolor: #aaa;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n</style>\n"]}]}