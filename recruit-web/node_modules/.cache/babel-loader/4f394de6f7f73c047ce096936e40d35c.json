{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\lin\\directive\\new-tab-preview.js","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\lin\\directive\\new-tab-preview.js","mtime":1743855830820},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\babel.config.js","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["// src/directive/new-tab-preview.js\nexport default {\n  inserted: function inserted(el) {\n    // 等待组件渲染完成\n    setTimeout(function () {\n      // 找到预览按钮\n      var previewButtons = el.querySelectorAll('.el-upload-list__item-preview');\n      previewButtons.forEach(function (button) {\n        // 克隆按钮并替换原按钮，移除所有事件监听器\n        var newButton = button.cloneNode(true);\n        button.parentNode.replaceChild(newButton, button); // 添加新的点击事件\n\n        newButton.addEventListener('click', function (event) {\n          event.stopPropagation();\n          event.preventDefault(); // 找到图片URL\n\n          var listItem = newButton.closest('.el-upload-list__item');\n          var imgElement = listItem.querySelector('img');\n\n          if (imgElement && imgElement.src) {\n            // 在新标签页中打开\n            window.open(imgElement.src, '_blank');\n          } else {\n            console.warn('找不到图片元素或图片地址');\n          }\n\n          return false;\n        }, true);\n      });\n    }, 500); // 延迟500毫秒等待组件渲染完成\n  },\n  // 组件更新时也应用同样的逻辑\n  componentUpdated: function componentUpdated(el) {\n    // 等待组件更新完成\n    setTimeout(function () {\n      // 找到预览按钮\n      var previewButtons = el.querySelectorAll('.el-upload-list__item-preview');\n      previewButtons.forEach(function (button) {\n        // 检查按钮是否已经被处理过\n        if (!button.dataset.handled) {\n          // 标记此按钮已被处理\n          button.dataset.handled = 'true'; // 克隆按钮并替换原按钮，移除所有事件监听器\n\n          var newButton = button.cloneNode(true);\n          newButton.dataset.handled = 'true';\n          button.parentNode.replaceChild(newButton, button); // 添加新的点击事件\n\n          newButton.addEventListener('click', function (event) {\n            event.stopPropagation();\n            event.preventDefault(); // 找到图片URL\n\n            var listItem = newButton.closest('.el-upload-list__item');\n            var imgElement = listItem.querySelector('img');\n\n            if (imgElement && imgElement.src) {\n              // 在新标签页中打开\n              window.open(imgElement.src, '_blank');\n            } else {\n              console.warn('找不到图片元素或图片地址');\n            }\n\n            return false;\n          }, true);\n        }\n      });\n    }, 500); // 延迟500毫秒等待组件更新完成\n  }\n};",{"version":3,"names":["inserted","el","setTimeout","previewButtons","querySelectorAll","forEach","button","newButton","cloneNode","parentNode","replaceChild","addEventListener","event","stopPropagation","preventDefault","listItem","closest","imgElement","querySelector","src","window","open","console","warn","componentUpdated","dataset","handled"],"sources":["D:/001JavaTools/001Java项目/招聘系统/recruit-system/recruit-web/src/lin/directive/new-tab-preview.js"],"sourcesContent":["// src/directive/new-tab-preview.js\r\nexport default {\r\n    inserted: function (el) {\r\n      // 等待组件渲染完成\r\n      setTimeout(() => {\r\n        // 找到预览按钮\r\n        const previewButtons = el.querySelectorAll('.el-upload-list__item-preview');\r\n        \r\n        previewButtons.forEach(button => {\r\n          // 克隆按钮并替换原按钮，移除所有事件监听器\r\n          const newButton = button.cloneNode(true);\r\n          button.parentNode.replaceChild(newButton, button);\r\n          \r\n          // 添加新的点击事件\r\n          newButton.addEventListener('click', function(event) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            \r\n            // 找到图片URL\r\n            const listItem = newButton.closest('.el-upload-list__item');\r\n            const imgElement = listItem.querySelector('img');\r\n            if (imgElement && imgElement.src) {\r\n              // 在新标签页中打开\r\n              window.open(imgElement.src, '_blank');\r\n            } else {\r\n              console.warn('找不到图片元素或图片地址');\r\n            }\r\n            \r\n            return false;\r\n          }, true);\r\n        });\r\n      }, 500); // 延迟500毫秒等待组件渲染完成\r\n    },\r\n    \r\n    // 组件更新时也应用同样的逻辑\r\n    componentUpdated: function(el) {\r\n      // 等待组件更新完成\r\n      setTimeout(() => {\r\n        // 找到预览按钮\r\n        const previewButtons = el.querySelectorAll('.el-upload-list__item-preview');\r\n        \r\n        previewButtons.forEach(button => {\r\n          // 检查按钮是否已经被处理过\r\n          if (!button.dataset.handled) {\r\n            // 标记此按钮已被处理\r\n            button.dataset.handled = 'true';\r\n            \r\n            // 克隆按钮并替换原按钮，移除所有事件监听器\r\n            const newButton = button.cloneNode(true);\r\n            newButton.dataset.handled = 'true';\r\n            button.parentNode.replaceChild(newButton, button);\r\n            \r\n            // 添加新的点击事件\r\n            newButton.addEventListener('click', function(event) {\r\n              event.stopPropagation();\r\n              event.preventDefault();\r\n              \r\n              // 找到图片URL\r\n              const listItem = newButton.closest('.el-upload-list__item');\r\n              const imgElement = listItem.querySelector('img');\r\n              if (imgElement && imgElement.src) {\r\n                // 在新标签页中打开\r\n                window.open(imgElement.src, '_blank');\r\n              } else {\r\n                console.warn('找不到图片元素或图片地址');\r\n              }\r\n              \r\n              return false;\r\n            }, true);\r\n          }\r\n        });\r\n      }, 500); // 延迟500毫秒等待组件更新完成\r\n    }\r\n  };"],"mappings":"AAAA;AACA,eAAe;EACXA,QAAQ,EAAE,kBAAUC,EAAV,EAAc;IACtB;IACAC,UAAU,CAAC,YAAM;MACf;MACA,IAAMC,cAAc,GAAGF,EAAE,CAACG,gBAAH,CAAoB,+BAApB,CAAvB;MAEAD,cAAc,CAACE,OAAf,CAAuB,UAAAC,MAAM,EAAI;QAC/B;QACA,IAAMC,SAAS,GAAGD,MAAM,CAACE,SAAP,CAAiB,IAAjB,CAAlB;QACAF,MAAM,CAACG,UAAP,CAAkBC,YAAlB,CAA+BH,SAA/B,EAA0CD,MAA1C,EAH+B,CAK/B;;QACAC,SAAS,CAACI,gBAAV,CAA2B,OAA3B,EAAoC,UAASC,KAAT,EAAgB;UAClDA,KAAK,CAACC,eAAN;UACAD,KAAK,CAACE,cAAN,GAFkD,CAIlD;;UACA,IAAMC,QAAQ,GAAGR,SAAS,CAACS,OAAV,CAAkB,uBAAlB,CAAjB;UACA,IAAMC,UAAU,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAnB;;UACA,IAAID,UAAU,IAAIA,UAAU,CAACE,GAA7B,EAAkC;YAChC;YACAC,MAAM,CAACC,IAAP,CAAYJ,UAAU,CAACE,GAAvB,EAA4B,QAA5B;UACD,CAHD,MAGO;YACLG,OAAO,CAACC,IAAR,CAAa,cAAb;UACD;;UAED,OAAO,KAAP;QACD,CAfD,EAeG,IAfH;MAgBD,CAtBD;IAuBD,CA3BS,EA2BP,GA3BO,CAAV,CAFsB,CA6Bb;EACV,CA/BU;EAiCX;EACAC,gBAAgB,EAAE,0BAASvB,EAAT,EAAa;IAC7B;IACAC,UAAU,CAAC,YAAM;MACf;MACA,IAAMC,cAAc,GAAGF,EAAE,CAACG,gBAAH,CAAoB,+BAApB,CAAvB;MAEAD,cAAc,CAACE,OAAf,CAAuB,UAAAC,MAAM,EAAI;QAC/B;QACA,IAAI,CAACA,MAAM,CAACmB,OAAP,CAAeC,OAApB,EAA6B;UAC3B;UACApB,MAAM,CAACmB,OAAP,CAAeC,OAAf,GAAyB,MAAzB,CAF2B,CAI3B;;UACA,IAAMnB,SAAS,GAAGD,MAAM,CAACE,SAAP,CAAiB,IAAjB,CAAlB;UACAD,SAAS,CAACkB,OAAV,CAAkBC,OAAlB,GAA4B,MAA5B;UACApB,MAAM,CAACG,UAAP,CAAkBC,YAAlB,CAA+BH,SAA/B,EAA0CD,MAA1C,EAP2B,CAS3B;;UACAC,SAAS,CAACI,gBAAV,CAA2B,OAA3B,EAAoC,UAASC,KAAT,EAAgB;YAClDA,KAAK,CAACC,eAAN;YACAD,KAAK,CAACE,cAAN,GAFkD,CAIlD;;YACA,IAAMC,QAAQ,GAAGR,SAAS,CAACS,OAAV,CAAkB,uBAAlB,CAAjB;YACA,IAAMC,UAAU,GAAGF,QAAQ,CAACG,aAAT,CAAuB,KAAvB,CAAnB;;YACA,IAAID,UAAU,IAAIA,UAAU,CAACE,GAA7B,EAAkC;cAChC;cACAC,MAAM,CAACC,IAAP,CAAYJ,UAAU,CAACE,GAAvB,EAA4B,QAA5B;YACD,CAHD,MAGO;cACLG,OAAO,CAACC,IAAR,CAAa,cAAb;YACD;;YAED,OAAO,KAAP;UACD,CAfD,EAeG,IAfH;QAgBD;MACF,CA7BD;IA8BD,CAlCS,EAkCP,GAlCO,CAAV,CAF6B,CAoCpB;EACV;AAvEU,CAAf"}]}