{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\plugin\\lin-cms-ui\\view\\data\\tag\\tag.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\plugin\\lin-cms-ui\\view\\data\\tag\\tag.vue","mtime":1706286066000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: '',\n  components: {},\n  data() {\n    return {\n      items: [\n        { type: '', label: '标签一' },\n        { type: 'success', label: '标签二' },\n        { type: 'info', label: '标签三' },\n        { type: 'danger', label: '标签四' },\n        { type: 'warning', label: '标签五' },\n      ],\n      dynamicTags: ['标签一', '标签二', '标签三'],\n      inputVisible: false,\n      inputValue: '',\n      tags: [\n        { name: '标签一', type: '' },\n        { name: '标签二', type: 'success' },\n        { name: '标签三', type: 'info' },\n        { name: '标签四', type: 'warning' },\n        { name: '标签五', type: 'danger' },\n      ],\n      text: '',\n      /* eslint-disable */\n      base: `     \n        <el-tag>标签一</el-tag>\n        <el-tag type=\"success\">标签二</el-tag>\n        <el-tag type=\"info\">标签三</el-tag>\n        <el-tag type=\"warning\">标签四</el-tag>\n        <el-tag type=\"danger\">标签五</el-tag>`,\n      closable: `\n       <el-tag\n        v-for=\"tag in tags\"\n        :key=\"tag.name\"\n        closable\n        @close=\"handleCloseTag(tag)\"\n        :type=\"tag.type\">\n        {{tag.name}}\n      </el-tag>\n\n      <script>\n        export default {\n          data() {\n            return {\n              tags: [\n                { name: '标签一', type: '' },\n                { name: '标签二', type: 'success' },\n                { name: '标签三', type: 'info' },\n                { name: '标签四', type: 'warning' },\n                { name: '标签五', type: 'danger' }\n              ]\n            };\n          methods: {\n            handleCloseTag(tag) {\n              this.tags.splice(this.tags.indexOf(tag), 1);\n            },\n          }\n        }\n      <\\/script>`,\n      dynamic: `\n           <el-tag\n            :key=\"tag\"\n            v-for=\"tag in dynamicTags\"\n            closable\n            :disable-transitions=\"false\"\n            @close=\"handleClose(tag)\">\n            {{tag}}\n          </el-tag>\n          <el-input\n            class=\"input-new-tag\"\n            v-if=\"inputVisible\"\n            v-model=\"inputValue\"\n            ref=\"saveTagInput\"\n            size=\"small\"\n            @keyup.enter.native=\"handleInputConfirm\"\n            @blur=\"handleInputConfirm\"\n          >\n          </el-input>\n          <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput\">+ New Tag</el-button>\n\n          <style>\n            .el-tag + .el-tag {\n              margin-left: 10px;\n            }\n            .button-new-tag {\n              margin-left: 10px;\n              height: 32px;\n              line-height: 30px;\n              padding-top: 0;\n              padding-bottom: 0;\n            }\n            .input-new-tag {\n              width: 90px;\n              margin-left: 10px;\n              vertical-align: bottom;\n            }\n            .input-new-tag ::v-deep .el-input__inner {\n              height: 24px;\n            }\n          </style>\n\n          <script>\n            export default {\n              data() {\n                return {\n                  dynamicTags: ['标签一', '标签二', '标签三'],\n                  inputVisible: false,\n                  inputValue: ''\n                };\n              },\n              methods: {\n                handleClose(tag) {\n                  this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n                },\n\n                showInput() {\n                  this.inputVisible = true;\n                  this.$nextTick(_ => {\n                    this.$refs.saveTagInput.$refs.input.focus();\n                  });\n                },\n\n                handleInputConfirm() {\n                  let inputValue = this.inputValue;\n                  if (inputValue) {\n                    this.dynamicTags.push(inputValue);\n                  }\n                  this.inputVisible = false;\n                  this.inputValue = '';\n                }\n              }\n            }\n          <\\/script>`,\n      size: `\n            <el-tag closable>默认标签</el-tag>\n            <el-tag size=\"medium\" closable>中等标签</el-tag>\n            <el-tag size=\"small\" closable>小型标签</el-tag>\n            <el-tag size=\"mini\" closable>超小标签</el-tag>\n            `,\n      theme: `<div class=\"tag-group\">\n              <span class=\"tag-group__title\">Dark</span>\n              <el-tag\n                v-for=\"item in items\"\n                :key=\"item.label\"\n                :type=\"item.type\"\n                effect=\"dark\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n            <div class=\"tag-group\">\n              <span class=\"tag-group__title\">Plain</span>\n              <el-tag\n                v-for=\"item in items\"\n                :key=\"item.label\"\n                :type=\"item.type\"\n                effect=\"plain\">\n                {{ item.label }}\n              </el-tag>\n            </div>\n\n            <script>\n              export default {\n                data() {\n                  return {\n                    items: [\n                      { type: '', label: '标签一' },\n                      { type: 'success', label: '标签二' },\n                      { type: 'info', label: '标签三' },\n                      { type: 'danger', label: '标签四' },\n                      { type: 'warning', label: '标签五' }\n                    ]\n                  }\n                }\n              }\n            <\\/script>`,\n    }\n  },\n  // 计算属性设置\n  computed: {},\n  // 数据变更监听\n  watch: {},\n  mounted() {\n    this.init()\n  },\n  methods: {\n    handleInputConfirm() {\n      let inputValue = this.inputValue\n      if (inputValue) {\n        this.dynamicTags.push(inputValue)\n      }\n      this.inputVisible = false\n      this.inputValue = ''\n    },\n    handleCloseTag(tag) {\n      this.tags.splice(this.tags.indexOf(tag), 1)\n    },\n    handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\n    },\n    showInput() {\n      this.inputVisible = true\n      this.$nextTick(() => {\n        this.$refs.saveTagInput.$refs.input.focus()\n      })\n    },\n    // 执行获取数据等初始化动作\n    init() {},\n  },\n}\n",null]}