{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-detail.vue","mtime":1743856409982},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Company\n} from '@/model/company'\nimport {\n  Follow\n} from '@/model/follow'\nimport UploadImgs from '@/component/base/upload-image'\n\nexport default {\n  components: {\n    UploadImgs,\n  },\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    detailCompanyID: {\n      type: Number,\n    },\n    flag: {\n      type: Boolean,\n      default: true,\n    },\n    temp: {\n      type: Number,\n      default: 0,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {},\n      list: {},\n      maxNum: 1,\n      initData: [],\n      poster: {}\n    }\n  },\n  async mounted() {\n    this.loading = true\n    const res = await Company.getById(this.detailCompanyID)\n    this.poster = [{\n      id: res.id,\n      display: res.poster,\n    }]\n    this.initData = [{\n      id: res.id,\n      display: res.logo,\n    },]\n    this.form = res\n    this.loading = false\n  },\n  methods: {\n    async handlePass(val) {\n      const res = await Company.updateState(this.detailCompanyID, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('detailClose')\n      }\n    },\n    async handleFail(val) {\n      const res = await Company.updateState(this.detailCompanyID, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        this.$emit('detailClose')\n      }\n    },\n    // 关注公司\n    async handleFollow(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前关注的公司id\n      this.list.company_id = this.detailCompanyID\n      // 调用添加关注的方法\n      const res = await Follow.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n    // 在新标签页打开图片预览\n    handleImagePreview(file) {\n      // 如果有file.url就使用file.url，否则使用file.display\n      const imageUrl = file.url || file.display;\n      if (!imageUrl) {\n        this.$message.warning('没有可预览的图片');\n        return;\n      }\n      // 在新标签页中打开图片\n      window.open(imageUrl, '_blank');\n    },\n    back() {\n      // 由于showEdit这个变量是在父组件定义的，因此不能在子组件改变该变量的值，可以使用事件传递的方式，当点击了返回按钮，触发的事件处理机制交给父组件去处理\n      this.$emit('detailClose')\n    },\n  },\n}\n",null]}