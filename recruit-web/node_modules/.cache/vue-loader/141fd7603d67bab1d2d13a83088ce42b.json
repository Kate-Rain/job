{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue","mtime":1745597181705},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n// import WorkListVue from \"./WorkList.vue\";\nimport Work from \"./Work.vue\";\nimport {\n\tPosition\n} from '@/model/position'\nimport Button from \"../../plugin/lin-cms-ui/view/basic/button/button.vue\";\nimport LinSearch from '@/component/base/search/lin-search'\nimport PositionDetail from '@/view/position/position-detail'\n\nimport {  Category } from '@/model/category'\nimport Nav from '@/component/index/Nav.vue'\nexport default {\n\tcomponents: {\n\t\t// WorkListVue,\n\t\tButton,\n\t\tLinSearch,\n\t\tPositionDetail,\n\t\tWork,\n\t\tNav,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tworklist: [],\n\t\t\trecommendList:[],\n\t\t\t// sWidth:this.nxw,\n\t\t\tlist: this.slist,\n\t\t\tshowDetail: false, // 是否显示职位详情页\n\t\t\tshowHot: false, // 是否显示热招职位列表\n\t\t\ttableData: [], // 表格数据\n\t\t\ttotalNums: 0, // 数据总数\n\t\t\tcurrentPage: 1, // 当前页数\n\t\t\tpageCount: 12, // 每页的数据量\n\t\t\trefreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n\t\t\tdetailPositionID: 0, // 职位id\n\t\t\tsearchKeyword: '', // 搜索时输入的关键字\n\t\t\tkeyword: null, // 查询关键字,用于显示搜索提示\n\t\t\tform: {}, //投递简历时传入的列表数据\n\t\t\tlist: {} //收藏职位时传入的列表数据\n\t\t}\n\t},\n\tprops: ['nxw', 'slist', 'searchValue'],\n \tasync mounted() {\n\t\tif (this.keywordValue) {\n\t\t\tthis.keyword = this.keywordValue;\n\t\t}\n\t\tthis.searchPositionList(this.keyword)\n\t\t\n\t\tvar res = await Category.getList()\n\t\tthis.recommendList = this.getShufflePos(res).splice(0,6);\n\t},\n\t// watch: {\n\t// \t/**\n\t// \t * 关键字搜索\n\t// \t */\n\t// \tsearchKeyword(newVal) {\n\t// \t\tif (newVal) {\n\t// \t\t\tthis.keyword = newVal\n\t// \t\t\tif (this.searchUser) {\n\t// \t\t\t\tthis.keyword = `${newVal}`\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tthis.keyword = ''\n\t// \t\t\tthis.$refs.searchKeyword.clear()\n\t// \t\t}\n\t// \t\tthis.searchPositionList()\n\t// \t},\n\t// },\n\tmethods: {\n\t\t// 使用shuffle算法获取随机的职位推荐顺序\n\t\tgetShufflePos(array){\n\t\t\tlet res = [],random;\n\t\t\twhile(array.length>0){\n\t\t\t\trandom = Math.floor(Math.random() * array.length);\n\t\t\t\tres.push(array[random]);\n\t\t\t\tarray.splice(random,1);\n\t\t\t}\n\t\t\treturn res;\n\t\t},\n\t\tasync getByState() {\n\t\t\tconst page = this.currentPage - 1;\n\t\t\tconst count = this.pageCount;\n\t\t\t// 首页展示所有审核通过的职位\n\t\t\tconst positions = await Position.getByState(1, page, count);\n\t\t\tthis.tableData = positions.items;\n\t\t\tthis.totalNums = positions.total;\n\t\t},\n\t\t// 通过查询关键字分页搜索职位列表 \n\t\tasync searchPositionList(searchKeyword=null) {\n\t\t\tsearchKeyword = searchKeyword == null ? \"\" : searchKeyword; // 避免参数为null\n\t\t\t// this.searchKeyword = searchKeyword;\n\t\t\tconst page = this.currentPage - 1;\n\t\t\tconst count = this.pageCount;\n\t\t\tconst positions = await Position.getByKeyword(page, count, searchKeyword);\n\t\t\t// 获取职位数据,(顺序随机)\n\t\t\t// 存储\n\t\t\tthis.tableData =  this.getShufflePos(positions.items)\n\t\t\tthis.totalNums = positions.total;\n\t\t\t// 清空检索\n\t\t\tthis.searchKeyword = '';\n\t\t\tif(this.totalNums==0){\n\t\t\t\tthis.$message.warning(\"当前职位没有新的招聘.\");\n\t\t\t\tthis.searchPositionList();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// this.$message.success(\"查询职位成功\")\n\t\t},\n\t\t// 清空检索\n\t\tasync backInit() {\n\t\t\tthis.searchKeyword = '';\n\t\t\tthis.keyword = '';\n\t\t\tthis.tableData = [];\n\t\t\tthis.loading = true;\n\t\t\tthis.searchPositionList();\n\t\t\tthis.loading = false;\n\t\t},\n\t\t/**\n\t\t * 监听输入查询关键字\n\t\t */\n\t\tasync onQueryChange() {\n\t\t\tthis.searchKeyword = this.searchKeyword.trim();\n\t\t\tthis.searchPositionList(this.searchKeyword);\n\t\t},\n\t\t// 切换table页\n\t\tasync handleCurrentChange(val) {\n\t\t\tthis.currentPage = val;\n\t\t\tthis.loading = true;\n\t\t\tthis.searchPositionList();\n\t\t\tthis.loading = false;\n\t\t},\n\t\thandleDetail(val) {\n\t\t\tthis.showDetail = true;\n\t\t\tthis.detailPositionID = val.id;\n\t\t},\n\t\thandleHot() {\n\t\t\tthis.showHot = true;\n\t\t},\n\t\trowClick() { },\n\t\tdetailClose() {\n\t\t\tthis.showDetail = false;\n\t\t\tthis.searchPositionList();\n\t\t},\n\t\thotClose() {\n\t\t\tthis.showHot = false\n\t\t\tthis.showDetail = false\n\t\t\tthis.searchPositionList()\n\t\t},\n\t\t// 投递简历\n\t\tasync handleDelivery(val) {\n\t\t\t// 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n\t\t\tconst flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n\t\t\tif (flag === false) {\n\t\t\t\t// 不能重复投递\n\t\t\t\tthis.$message.error(\"你已投递过该职位，不可重复投递\")\n\t\t\t} else {\n\t\t\t\tif (!this.$store.getters.user.id) return;\n\t\t\t\t// 获取当前登录求职者的用户id\n\t\t\t\tthis.form.user_id = this.$store.getters.user.id\n\t\t\t\t// 获取当前投递简历的职位id\n\t\t\t\tthis.form.position_id = val.id\n\t\t\t\t// 根据用户id查询绑定的简历id\n\t\t\t\tconst temp = await Resume.getByUserId(this.$store.getters.user.id)\n\t\t\t\tthis.form.resume_id = temp.resume_id\n\t\t\t\tconsole.log(temp)\n\t\t\t\t// 根据职位id查询该职位所对应的hr_id\n\t\t\t\tconst result = await Position.getById(val.id)\n\t\t\t\tthis.form.hr_id = result.hr_id\n\t\t\t\tthis.form.company_id = val.company_id\n\t\t\t\t// 调用创建申请的方法\n\t\t\t\tconst res = await Application.create(this.form)\n\t\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// 收藏职位\n\t\tasync handleCollect(val) {\n\t\t\t// 获取当前登录求职者的用户id\n\t\t\tthis.list.user_id = this.$store.getters.user.id\n\t\t\t// 获取当前收藏的职位id\n\t\t\tthis.list.position_id = val.id\n\t\t\t// 调用添加收藏的方法\n\t\t\tconst res = await Favor.create(this.list)\n\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t}\n\t\t},\n\t}\n}\n",null]}