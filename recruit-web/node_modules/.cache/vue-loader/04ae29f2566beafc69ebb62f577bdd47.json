{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue","mtime":1717914756142},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Interview\n} from '@/model/interview'\nimport ResumeDetail from '@/view/resume/resume-detail'\n\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail\n  },\n  data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      resultData: {\n        id: '',\n        status: '',\n        comments: '',\n      },\n      rules: {\n        status: [{\n          required: true,\n          message: '面试结果不能为空',\n          trigger: 'change'\n        }],\n        comments: [{\n          required: true,\n          message: '请输入面试评价',\n          trigger: 'blur'\n        }],\n      },\n      statusOptions: [{\n        \"label\": \"通过\",\n        \"value\": 2\n      }, {\n        \"label\": \"未通过\",\n        \"value\": 3\n      }],\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    onOpen(row) {\n      this.resultshow = true\n      this.resultData = row\n    },\n    onClose() {\n      this.$refs['resultForm'].resetFields()\n    },\n    close() {\n      this.resultshow = false\n    },\n    async handelConfirm() {\n      this.$refs['resultForm'].validate(valid => {\n        if (!valid) return\n        this.close()\n      })\n      const res = await Interview.updateInterviewResult(this.resultData)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`录入成功`)\n        this.getByHrId()\n        this.close()\n      }\n    },\n    async getByHrId() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 未处理：state=0\n      const applications = await Interview.getByHrId(this.$store.getters.user.id, 0, page,count)\n      this.tableData = applications.items\n      this.tableData = this.tableData.filter((item) => {\n        return item.status !== 0\n      });\n      this.totalNums = applications.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailResumeID = val.resume_id\n      this.applicationID = val.id\n      this.applicationState = val.state\n    },\n    async handlePass(val) {\n      const res = await Interview.updateState(val.id, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    async handleFail(val) {\n      const res = await Application.updateState(val.id, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByHrId()\n    },\n  },\n}\n",null]}