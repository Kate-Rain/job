{"remainingRequest":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue","mtime":1744257012324},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\001JavaTools\\001Java项目\\招聘系统\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { HRCompany } from '@/model/hrCompany'\nimport { Company } from '@/model/company'\nimport UploadImgs from '@/component/base/upload-image'\nimport CompanyCreate from '@/view/company/company-create'\nimport { getAll } from 'good-storage'\n\nexport default {\n  components: {\n    UploadImgs,\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      maxNum: 1,\n      initData: [],\n      initPosData: [],\n      showCreate: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      if (!res.logo) {\n        // 还未完成企业认证，会显示企业认证组件\n        this.$message.warning(\"还未完成企业认证,请先完成认证操作之后再继续.\")\n        this.showCreate = true\n        return\n      }\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    // 上传图片后，获取服务器返回的URL地址\n    async getValue() {\n      // 显示提示框\n      this.$confirm('如需更新公司海报，请在公司logo点击加号可修改公司海报', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info',\n        center: true\n      }).then(() => {\n        // 用户点击确定后执行获取图片的操作\n        this.updateImages();\n      }).catch(() => {\n        // 用户点击取消则不执行任何操作\n      });\n    },\n\n    // 实际更新图片的方法\n    async updateImages() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        if (val[0]) {\n          this.form.logo = val[0].display\n        }\n        if (val.length > 1 && val[1]) {\n          this.form.poster = val[1].display\n        }\n      }\n    },\n\n    async submitForm() {\n      try {\n        // 提交表单时直接调用更新图片的方法，不显示提示框\n        await this.updateImages()\n        if (!this.form.logo) {\n          this.$message.warning('公司logo不能为空')\n          return\n        }\n        const res = await Company.update(this.form.id, this.form)\n        // 修改公司状态为待审核，即state=0\n        await Company.updateState(this.form.id, 0)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 更新成功后刷新表单数据\n          this.refreshFormData()\n        }\n      } catch (error) {\n        this.$message.error('保存失败，请重试')\n      }\n    },\n\n    // 刷新表单数据\n    async refreshFormData() {\n      this.loading = true\n      try {\n        const result = await HRCompany.get(this.$store.getters.user.id)\n        this.initData = [\n          {\n            id: result.id,\n            display: result.logo,\n          },\n        ]\n        this.form = result\n      } catch (error) {\n        console.error('刷新表单数据时出错:', error)\n      } finally {\n        this.loading = false\n      }\n    },\n\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n      // 如果上传组件有reset方法，则重置上传组件状态\n      if (this.$refs.uploadEle && this.$refs.uploadEle.reset) {\n        this.$refs.uploadEle.reset()\n      }\n    },\n\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    },\n  },\n}\n",null]}