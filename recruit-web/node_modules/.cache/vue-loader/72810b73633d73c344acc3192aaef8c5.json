{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\about\\about.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\about\\about.vue","mtime":1741591987359},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LinSearch from '@/component/base/search/lin-search'\nimport { Position } from '@/model/position'\nimport { Application } from '@/model/application'\nimport { Resume } from '@/model/resume'\nimport { Favor } from '@/model/favor'\nimport PositionDetail from '@/view/position/position-detail'\nimport HotPosition from '@/view/position/hot-position'\n\nexport default {\n  components: {\n    LinSearch,\n    PositionDetail,\n    HotPosition,\n  },\n  data() {\n    return {\n      showDetail: false, // 是否显示职位详情页\n      showHot: false, // 是否显示热招职位列表\n      tableData: [], // 表格数据\n      totalNums: 0, // 数据总数\n      currentPage: 1, // 当前页数\n      pageCount: 10, // 每页的数据量\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailPositionID: 0, // 职位id\n      searchKeyword: '', // 搜索时输入的关键字\n      keyword: null, // 查询关键字,用于显示搜索提示\n      form: {}, //投递简历时传入的列表数据\n      list: {}, //收藏职位时传入的列表数据\n      logo: require(\"@/assets/image/logo.png\")\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByState()\n    this.loading = false\n  },\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${newVal}`\n        }\n      } else {\n        this.keyword = ''\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchPositionList()\n    },\n  },\n  methods: {\n    async getByState() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 首页展示所有审核通过的职位\n      const positions = await Position.getByState(1, page, count)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 通过查询关键字分页搜索职位列表 \n    async searchPositionList() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const positions = await Position.getByKeyword(page, count, this.searchKeyword)\n      this.tableData = positions.items\n      this.totalNums = positions.total\n    },\n    // 清空检索\n    async backInit() {\n      this.searchKeyword = ''\n      this.keyword = ''\n      this.tableData = []\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    /**\n     * 监听输入查询关键字\n     */\n    async onQueryChange(query) {\n      this.searchKeyword = query.trim()\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailPositionID = val.id\n    },\n    handleHot() {\n      this.showHot = true\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByState()\n    },\n    hotClose() {\n      this.showHot = false\n      this.showDetail = false\n      this.getByState()\n    },\n    // 投递简历\n    async handleDelivery(val) {\n      // 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n      const flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n      if (flag === false) {\n        // 不能重复投递\n        this.$message.error(\"你已投递过该职位，不可重复投递\")\n      } else {\n        // 获取当前登录求职者的用户id\n        this.form.user_id = this.$store.getters.user.id\n        // 获取当前投递简历的职位id\n        this.form.position_id = val.id\n        // 根据用户id查询绑定的简历id\n        const temp = await Resume.getByUserId(this.$store.getters.user.id)\n        this.form.resume_id = temp.resume_id\n        console.log(temp)\n        // 根据职位id查询该职位所对应的hr_id\n        const result = await Position.getById(val.id)\n        this.form.hr_id = result.hr_id\n        this.form.company_id = val.company_id\n        // 调用创建申请的方法\n        const res = await Application.create(this.form)\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n        }\n      }\n    },\n    // 收藏职位\n    async handleCollect(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前收藏的职位id\n      this.list.position_id = val.id\n      // 调用添加收藏的方法\n      const res = await Favor.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n  },\n}\n",null]}