{"remainingRequest":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\recruit\\recruit-system\\recruit-web\\src\\view\\resume\\resume-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\recruit\\recruit-system\\recruit-web\\src\\view\\resume\\resume-modify.vue","mtime":1706286066000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\recruit\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1655715099000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  Resume\n} from '@/model/resume'\nimport ResumeCreate from '@/view/resume/resume-create'\nimport Detail from './detail.vue'\n\nexport default {\n  components: {\n    ResumeCreate,\n    Detail\n  },\n  data() {\n    return {\n      isRouterAlive: true,\n      tabPosition: 'right',\n      resumeId: \"\",\n      loading: false,\n      form: {},\n      showCreate: false,\n      educations: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\",\n      },],\n      experiences: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\",\n      },],\n      projects: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: \"\",\n        performance: \"\",\n      },],\n      eduoptions: [{\n        value: 0,\n        label: '高中'\n      }, {\n        value: 1,\n        label: '大学专科'\n      }, {\n        value: 2,\n        label: '大学本科'\n      }, {\n        value: 3,\n        label: '硕士研究生'\n      }, {\n        value: 4,\n        label: '博士研究生'\n      }],\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await Resume.getByUserId(this.$store.getters.user.id)\n      if(!res.resume_id){\n        this.$message.warning(\"还未创建简历，即将为您进入简历创建页面\")\n        setTimeout(() => {\n          // 还未创建简历，会来到简历创建页面\n          this.showCreate = true;\n          }, 2000);\n        return\n      }\n      this.resumeId = res.resume_id + \"\"\n      this.form = res\n      this.educations = res.educations\n      this.experiences = res.experiences\n      this.projects = res.projects\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未创建简历，会来到简历创建页面\n      this.showCreate = true\n    }\n  },\n  methods: {\n    reload() {\n      this.isRouterAlive = true\n      this.$nextTick(() => (this.isRouterAlive = true))\n    },\n    // 教育经历操作\n    async updateEducation(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateEducation(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createEducation(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delEducation(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delEducation(row.id)\n        if (res.code === 2000) {\n          this.$message.success(\"删除成功\")\n          this.reload()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.educations.pop(row)\n    },\n    addEducation() {\n      this.educations.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\",\n      });\n    },\n\n    // 项目经历操作\n    async updateProject(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateProject(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createProject(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delProject(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delProject(row.id)\n        if (res.code === 2000) {\n          this.reload()\n          this.$message.success(\"删除成功\")\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.projects.pop(row)\n    },\n    addProject() {\n      this.projects.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: '',\n        performance: \"\",\n      });\n    },\n\n    // 工作经历操作\n    async updateExperience(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateExperience(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createExperience(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delExperience(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delExperience(row.id)\n        if (res.code === 2000) {\n          this.$message.success(\"删除成功\")\n          this.reload()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.experiences.pop(row)\n    },\n    addExperience() {\n      this.experiences.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\",\n      });\n    },\n\n    async submitForm() {\n      // 获取到当前登录求职者的用户id\n      this.form.user_id = this.$store.getters.user.id\n      const res = await Resume.update(this.form.user_id, this.form)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n      // 刷新页面，获取修改后的最新信息\n      this.loading = true\n      const result = await Resume.getByUserId(this.$store.getters.user.id)\n      this.form = result\n      this.loading = false\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await Resume.getByUserId(this.$store.getters.user.id)\n      this.form = res\n      this.loading = false\n    },\n    async getResumeInfo() {\n      try {\n        this.loading = true\n        const res = await Resume.getByUserId(this.$store.getters.user.id)\n        this.resumeId = res.resume_id + \"\"\n        console.log(this.resumeId)\n        this.form = res\n        this.educations = res.educations\n        this.experiences = res.experiences\n        this.projects = res.projects\n        this.$forceUpdate()\n        this.loading = false\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n        // 还未创建简历，会来到简历创建页面\n        this.showCreate = true\n      }\n    }\n  },\n}\n",null]}